{"version":3,"file":null,"sources":["/home/travis/build/leancloud/js-realtime-sdk/proto/message-compiled.js","/home/travis/build/leancloud/js-realtime-sdk/proto/message.js","/home/travis/build/leancloud/js-realtime-sdk/src/utils/global.js","/home/travis/build/leancloud/js-realtime-sdk/src/utils/expirable.js","/home/travis/build/leancloud/js-realtime-sdk/src/utils/cache.js","/home/travis/build/leancloud/js-realtime-sdk/src/utils/index.js","/home/travis/build/leancloud/js-realtime-sdk/src/websocket-plus.js","/home/travis/build/leancloud/js-realtime-sdk/src/error.js","/home/travis/build/leancloud/js-realtime-sdk/src/connection.js","/home/travis/build/leancloud/js-realtime-sdk/src/plugin.js","/home/travis/build/leancloud/js-realtime-sdk/src/realtime.js","/home/travis/build/leancloud/js-realtime-sdk/src/signature-factory-runner.js","/home/travis/build/leancloud/js-realtime-sdk/src/messages/message.js","/home/travis/build/leancloud/js-realtime-sdk/src/messages/helpers.js","/home/travis/build/leancloud/js-realtime-sdk/src/messages/typed-message.js","/home/travis/build/leancloud/js-realtime-sdk/src/messages/recalled-message.js","/home/travis/build/leancloud/js-realtime-sdk/src/conversation.js","/home/travis/build/leancloud/js-realtime-sdk/src/conversation-query.js","/home/travis/build/leancloud/js-realtime-sdk/src/im-client.js","/home/travis/build/leancloud/js-realtime-sdk/src/messages/binary-message.js","/home/travis/build/leancloud/js-realtime-sdk/src/messages/text-message.js","/home/travis/build/leancloud/js-realtime-sdk/src/message-parser.js","/home/travis/build/leancloud/js-realtime-sdk/src/plugin-im.js","/home/travis/build/leancloud/js-realtime-sdk/src/index.js"],"sourcesContent":["module.exports = require(\"protobufjs/dist/protobuf-light\").newBuilder({})['import']({\n    \"package\": \"push_server.messages2\",\n    \"syntax\": \"proto2\",\n    \"options\": {\n        \"objc_class_prefix\": \"AVIM\"\n    },\n    \"messages\": [\n        {\n            \"name\": \"JsonObjectMessage\",\n            \"syntax\": \"proto2\",\n            \"fields\": [\n                {\n                    \"rule\": \"required\",\n                    \"type\": \"string\",\n                    \"name\": \"data\",\n                    \"id\": 1\n                }\n            ]\n        },\n        {\n            \"name\": \"UnreadTuple\",\n            \"syntax\": \"proto2\",\n            \"fields\": [\n                {\n                    \"rule\": \"required\",\n                    \"type\": \"string\",\n                    \"name\": \"cid\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"required\",\n                    \"type\": \"int32\",\n                    \"name\": \"unread\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"mid\",\n                    \"id\": 3\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"timestamp\",\n                    \"id\": 4\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"from\",\n                    \"id\": 5\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"data\",\n                    \"id\": 6\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"patchTimestamp\",\n                    \"id\": 7\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"mentioned\",\n                    \"id\": 8\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bytes\",\n                    \"name\": \"binaryMsg\",\n                    \"id\": 9\n                }\n            ]\n        },\n        {\n            \"name\": \"LogItem\",\n            \"syntax\": \"proto2\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"from\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"data\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"timestamp\",\n                    \"id\": 3\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"msgId\",\n                    \"id\": 4\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"ackAt\",\n                    \"id\": 5\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"readAt\",\n                    \"id\": 6\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"patchTimestamp\",\n                    \"id\": 7\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"mentionAll\",\n                    \"id\": 8\n                },\n                {\n                    \"rule\": \"repeated\",\n                    \"type\": \"string\",\n                    \"name\": \"mentionPids\",\n                    \"id\": 9\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"bin\",\n                    \"id\": 10\n                }\n            ]\n        },\n        {\n            \"name\": \"DataCommand\",\n            \"syntax\": \"proto2\",\n            \"fields\": [\n                {\n                    \"rule\": \"repeated\",\n                    \"type\": \"string\",\n                    \"name\": \"ids\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"repeated\",\n                    \"type\": \"JsonObjectMessage\",\n                    \"name\": \"msg\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"offline\",\n                    \"id\": 3\n                }\n            ]\n        },\n        {\n            \"name\": \"SessionCommand\",\n            \"syntax\": \"proto2\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"t\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"n\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"s\",\n                    \"id\": 3\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"ua\",\n                    \"id\": 4\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"r\",\n                    \"id\": 5\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"tag\",\n                    \"id\": 6\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"deviceId\",\n                    \"id\": 7\n                },\n                {\n                    \"rule\": \"repeated\",\n                    \"type\": \"string\",\n                    \"name\": \"sessionPeerIds\",\n                    \"id\": 8\n                },\n                {\n                    \"rule\": \"repeated\",\n                    \"type\": \"string\",\n                    \"name\": \"onlineSessionPeerIds\",\n                    \"id\": 9\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"st\",\n                    \"id\": 10\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"stTtl\",\n                    \"id\": 11\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"code\",\n                    \"id\": 12\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"reason\",\n                    \"id\": 13\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"deviceToken\",\n                    \"id\": 14\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"sp\",\n                    \"id\": 15\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"detail\",\n                    \"id\": 16\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"lastUnreadNotifTime\",\n                    \"id\": 17\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"lastPatchTime\",\n                    \"id\": 18\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"configBitmap\",\n                    \"id\": 19\n                }\n            ]\n        },\n        {\n            \"name\": \"ErrorCommand\",\n            \"syntax\": \"proto2\",\n            \"fields\": [\n                {\n                    \"rule\": \"required\",\n                    \"type\": \"int32\",\n                    \"name\": \"code\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"required\",\n                    \"type\": \"string\",\n                    \"name\": \"reason\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"appCode\",\n                    \"id\": 3\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"detail\",\n                    \"id\": 4\n                }\n            ]\n        },\n        {\n            \"name\": \"DirectCommand\",\n            \"syntax\": \"proto2\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"msg\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"uid\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"fromPeerId\",\n                    \"id\": 3\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"timestamp\",\n                    \"id\": 4\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"offline\",\n                    \"id\": 5\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"hasMore\",\n                    \"id\": 6\n                },\n                {\n                    \"rule\": \"repeated\",\n                    \"type\": \"string\",\n                    \"name\": \"toPeerIds\",\n                    \"id\": 7\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"r\",\n                    \"id\": 10\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"cid\",\n                    \"id\": 11\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"id\",\n                    \"id\": 12\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"transient\",\n                    \"id\": 13\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"dt\",\n                    \"id\": 14\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"roomId\",\n                    \"id\": 15\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"pushData\",\n                    \"id\": 16\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"will\",\n                    \"id\": 17\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"patchTimestamp\",\n                    \"id\": 18\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bytes\",\n                    \"name\": \"binaryMsg\",\n                    \"id\": 19\n                },\n                {\n                    \"rule\": \"repeated\",\n                    \"type\": \"string\",\n                    \"name\": \"mentionPids\",\n                    \"id\": 20\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"mentionAll\",\n                    \"id\": 21\n                }\n            ]\n        },\n        {\n            \"name\": \"AckCommand\",\n            \"syntax\": \"proto2\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"code\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"reason\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"mid\",\n                    \"id\": 3\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"cid\",\n                    \"id\": 4\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"t\",\n                    \"id\": 5\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"uid\",\n                    \"id\": 6\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"fromts\",\n                    \"id\": 7\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"tots\",\n                    \"id\": 8\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"type\",\n                    \"id\": 9\n                },\n                {\n                    \"rule\": \"repeated\",\n                    \"type\": \"string\",\n                    \"name\": \"ids\",\n                    \"id\": 10\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"appCode\",\n                    \"id\": 11\n                }\n            ]\n        },\n        {\n            \"name\": \"UnreadCommand\",\n            \"syntax\": \"proto2\",\n            \"fields\": [\n                {\n                    \"rule\": \"repeated\",\n                    \"type\": \"UnreadTuple\",\n                    \"name\": \"convs\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"notifTime\",\n                    \"id\": 2\n                }\n            ]\n        },\n        {\n            \"name\": \"ConvCommand\",\n            \"syntax\": \"proto2\",\n            \"fields\": [\n                {\n                    \"rule\": \"repeated\",\n                    \"type\": \"string\",\n                    \"name\": \"m\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"transient\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"unique\",\n                    \"id\": 3\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"cid\",\n                    \"id\": 4\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"cdate\",\n                    \"id\": 5\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"initBy\",\n                    \"id\": 6\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"sort\",\n                    \"id\": 7\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"limit\",\n                    \"id\": 8\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"skip\",\n                    \"id\": 9\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"flag\",\n                    \"id\": 10\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"count\",\n                    \"id\": 11\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"udate\",\n                    \"id\": 12\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"t\",\n                    \"id\": 13\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"n\",\n                    \"id\": 14\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"s\",\n                    \"id\": 15\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"statusSub\",\n                    \"id\": 16\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"statusPub\",\n                    \"id\": 17\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"statusTTL\",\n                    \"id\": 18\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"uniqueId\",\n                    \"id\": 19\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"targetClientId\",\n                    \"id\": 20\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"maxReadTimestamp\",\n                    \"id\": 21\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"maxAckTimestamp\",\n                    \"id\": 22\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"queryAllMembers\",\n                    \"id\": 23\n                },\n                {\n                    \"rule\": \"repeated\",\n                    \"type\": \"MaxReadTuple\",\n                    \"name\": \"maxReadTuples\",\n                    \"id\": 24\n                },\n                {\n                    \"rule\": \"repeated\",\n                    \"type\": \"string\",\n                    \"name\": \"cids\",\n                    \"id\": 25\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"JsonObjectMessage\",\n                    \"name\": \"results\",\n                    \"id\": 100\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"JsonObjectMessage\",\n                    \"name\": \"where\",\n                    \"id\": 101\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"JsonObjectMessage\",\n                    \"name\": \"attr\",\n                    \"id\": 103\n                }\n            ]\n        },\n        {\n            \"name\": \"RoomCommand\",\n            \"syntax\": \"proto2\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"roomId\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"s\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"t\",\n                    \"id\": 3\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"n\",\n                    \"id\": 4\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"transient\",\n                    \"id\": 5\n                },\n                {\n                    \"rule\": \"repeated\",\n                    \"type\": \"string\",\n                    \"name\": \"roomPeerIds\",\n                    \"id\": 6\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"byPeerId\",\n                    \"id\": 7\n                }\n            ]\n        },\n        {\n            \"name\": \"LogsCommand\",\n            \"syntax\": \"proto2\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"cid\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"l\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"limit\",\n                    \"id\": 3\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"t\",\n                    \"id\": 4\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"tt\",\n                    \"id\": 5\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"tmid\",\n                    \"id\": 6\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"mid\",\n                    \"id\": 7\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"checksum\",\n                    \"id\": 8\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"stored\",\n                    \"id\": 9\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"QueryDirection\",\n                    \"name\": \"direction\",\n                    \"id\": 10,\n                    \"options\": {\n                        \"default\": \"OLD\"\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"tIncluded\",\n                    \"id\": 11\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"ttIncluded\",\n                    \"id\": 12\n                },\n                {\n                    \"rule\": \"repeated\",\n                    \"type\": \"LogItem\",\n                    \"name\": \"logs\",\n                    \"id\": 105\n                }\n            ],\n            \"enums\": [\n                {\n                    \"name\": \"QueryDirection\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"OLD\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"NEW\",\n                            \"id\": 2\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            \"name\": \"RcpCommand\",\n            \"syntax\": \"proto2\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"id\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"cid\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"t\",\n                    \"id\": 3\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"read\",\n                    \"id\": 4\n                }\n            ]\n        },\n        {\n            \"name\": \"ReadTuple\",\n            \"syntax\": \"proto2\",\n            \"fields\": [\n                {\n                    \"rule\": \"required\",\n                    \"type\": \"string\",\n                    \"name\": \"cid\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"timestamp\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"mid\",\n                    \"id\": 3\n                }\n            ]\n        },\n        {\n            \"name\": \"MaxReadTuple\",\n            \"syntax\": \"proto2\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"pid\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"maxAckTimestamp\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"maxReadTimestamp\",\n                    \"id\": 3\n                }\n            ]\n        },\n        {\n            \"name\": \"ReadCommand\",\n            \"syntax\": \"proto2\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"cid\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"repeated\",\n                    \"type\": \"string\",\n                    \"name\": \"cids\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"repeated\",\n                    \"type\": \"ReadTuple\",\n                    \"name\": \"convs\",\n                    \"id\": 3\n                }\n            ]\n        },\n        {\n            \"name\": \"PresenceCommand\",\n            \"syntax\": \"proto2\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"StatusType\",\n                    \"name\": \"status\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"repeated\",\n                    \"type\": \"string\",\n                    \"name\": \"sessionPeerIds\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"cid\",\n                    \"id\": 3\n                }\n            ]\n        },\n        {\n            \"name\": \"ReportCommand\",\n            \"syntax\": \"proto2\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"initiative\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"type\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"data\",\n                    \"id\": 3\n                }\n            ]\n        },\n        {\n            \"name\": \"PatchItem\",\n            \"syntax\": \"proto2\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"cid\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"mid\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"timestamp\",\n                    \"id\": 3\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"recall\",\n                    \"id\": 4\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"data\",\n                    \"id\": 5\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"patchTimestamp\",\n                    \"id\": 6\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"from\",\n                    \"id\": 7\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bytes\",\n                    \"name\": \"binaryMsg\",\n                    \"id\": 8\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"mentionAll\",\n                    \"id\": 9\n                },\n                {\n                    \"rule\": \"repeated\",\n                    \"type\": \"string\",\n                    \"name\": \"mentionPids\",\n                    \"id\": 10\n                }\n            ]\n        },\n        {\n            \"name\": \"PatchCommand\",\n            \"syntax\": \"proto2\",\n            \"fields\": [\n                {\n                    \"rule\": \"repeated\",\n                    \"type\": \"PatchItem\",\n                    \"name\": \"patches\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"lastPatchTime\",\n                    \"id\": 2\n                }\n            ]\n        },\n        {\n            \"name\": \"GenericCommand\",\n            \"syntax\": \"proto2\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"CommandType\",\n                    \"name\": \"cmd\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"OpType\",\n                    \"name\": \"op\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"appId\",\n                    \"id\": 3\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"peerId\",\n                    \"id\": 4\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"i\",\n                    \"id\": 5\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"installationId\",\n                    \"id\": 6\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"priority\",\n                    \"id\": 7\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"service\",\n                    \"id\": 8\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"DataCommand\",\n                    \"name\": \"dataMessage\",\n                    \"id\": 101\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"SessionCommand\",\n                    \"name\": \"sessionMessage\",\n                    \"id\": 102\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"ErrorCommand\",\n                    \"name\": \"errorMessage\",\n                    \"id\": 103\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"DirectCommand\",\n                    \"name\": \"directMessage\",\n                    \"id\": 104\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"AckCommand\",\n                    \"name\": \"ackMessage\",\n                    \"id\": 105\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"UnreadCommand\",\n                    \"name\": \"unreadMessage\",\n                    \"id\": 106\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"ReadCommand\",\n                    \"name\": \"readMessage\",\n                    \"id\": 107\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"RcpCommand\",\n                    \"name\": \"rcpMessage\",\n                    \"id\": 108\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"LogsCommand\",\n                    \"name\": \"logsMessage\",\n                    \"id\": 109\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"ConvCommand\",\n                    \"name\": \"convMessage\",\n                    \"id\": 110\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"RoomCommand\",\n                    \"name\": \"roomMessage\",\n                    \"id\": 111\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"PresenceCommand\",\n                    \"name\": \"presenceMessage\",\n                    \"id\": 112\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"ReportCommand\",\n                    \"name\": \"reportMessage\",\n                    \"id\": 113\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"PatchCommand\",\n                    \"name\": \"patchMessage\",\n                    \"id\": 114\n                }\n            ]\n        }\n    ],\n    \"enums\": [\n        {\n            \"name\": \"CommandType\",\n            \"syntax\": \"proto2\",\n            \"values\": [\n                {\n                    \"name\": \"session\",\n                    \"id\": 0\n                },\n                {\n                    \"name\": \"conv\",\n                    \"id\": 1\n                },\n                {\n                    \"name\": \"direct\",\n                    \"id\": 2\n                },\n                {\n                    \"name\": \"ack\",\n                    \"id\": 3\n                },\n                {\n                    \"name\": \"rcp\",\n                    \"id\": 4\n                },\n                {\n                    \"name\": \"unread\",\n                    \"id\": 5\n                },\n                {\n                    \"name\": \"logs\",\n                    \"id\": 6\n                },\n                {\n                    \"name\": \"error\",\n                    \"id\": 7\n                },\n                {\n                    \"name\": \"login\",\n                    \"id\": 8\n                },\n                {\n                    \"name\": \"data\",\n                    \"id\": 9\n                },\n                {\n                    \"name\": \"room\",\n                    \"id\": 10\n                },\n                {\n                    \"name\": \"read\",\n                    \"id\": 11\n                },\n                {\n                    \"name\": \"presence\",\n                    \"id\": 12\n                },\n                {\n                    \"name\": \"report\",\n                    \"id\": 13\n                },\n                {\n                    \"name\": \"echo\",\n                    \"id\": 14\n                },\n                {\n                    \"name\": \"loggedin\",\n                    \"id\": 15\n                },\n                {\n                    \"name\": \"logout\",\n                    \"id\": 16\n                },\n                {\n                    \"name\": \"loggedout\",\n                    \"id\": 17\n                },\n                {\n                    \"name\": \"patch\",\n                    \"id\": 18\n                }\n            ]\n        },\n        {\n            \"name\": \"OpType\",\n            \"syntax\": \"proto2\",\n            \"values\": [\n                {\n                    \"name\": \"open\",\n                    \"id\": 1\n                },\n                {\n                    \"name\": \"add\",\n                    \"id\": 2\n                },\n                {\n                    \"name\": \"remove\",\n                    \"id\": 3\n                },\n                {\n                    \"name\": \"close\",\n                    \"id\": 4\n                },\n                {\n                    \"name\": \"opened\",\n                    \"id\": 5\n                },\n                {\n                    \"name\": \"closed\",\n                    \"id\": 6\n                },\n                {\n                    \"name\": \"query\",\n                    \"id\": 7\n                },\n                {\n                    \"name\": \"query_result\",\n                    \"id\": 8\n                },\n                {\n                    \"name\": \"conflict\",\n                    \"id\": 9\n                },\n                {\n                    \"name\": \"added\",\n                    \"id\": 10\n                },\n                {\n                    \"name\": \"removed\",\n                    \"id\": 11\n                },\n                {\n                    \"name\": \"start\",\n                    \"id\": 30\n                },\n                {\n                    \"name\": \"started\",\n                    \"id\": 31\n                },\n                {\n                    \"name\": \"joined\",\n                    \"id\": 32\n                },\n                {\n                    \"name\": \"members_joined\",\n                    \"id\": 33\n                },\n                {\n                    \"name\": \"left\",\n                    \"id\": 39\n                },\n                {\n                    \"name\": \"members_left\",\n                    \"id\": 40\n                },\n                {\n                    \"name\": \"results\",\n                    \"id\": 42\n                },\n                {\n                    \"name\": \"count\",\n                    \"id\": 43\n                },\n                {\n                    \"name\": \"result\",\n                    \"id\": 44\n                },\n                {\n                    \"name\": \"update\",\n                    \"id\": 45\n                },\n                {\n                    \"name\": \"updated\",\n                    \"id\": 46\n                },\n                {\n                    \"name\": \"mute\",\n                    \"id\": 47\n                },\n                {\n                    \"name\": \"unmute\",\n                    \"id\": 48\n                },\n                {\n                    \"name\": \"status\",\n                    \"id\": 49\n                },\n                {\n                    \"name\": \"members\",\n                    \"id\": 50\n                },\n                {\n                    \"name\": \"max_read\",\n                    \"id\": 51\n                },\n                {\n                    \"name\": \"is_member\",\n                    \"id\": 52\n                },\n                {\n                    \"name\": \"join\",\n                    \"id\": 80\n                },\n                {\n                    \"name\": \"invite\",\n                    \"id\": 81\n                },\n                {\n                    \"name\": \"leave\",\n                    \"id\": 82\n                },\n                {\n                    \"name\": \"kick\",\n                    \"id\": 83\n                },\n                {\n                    \"name\": \"reject\",\n                    \"id\": 84\n                },\n                {\n                    \"name\": \"invited\",\n                    \"id\": 85\n                },\n                {\n                    \"name\": \"kicked\",\n                    \"id\": 86\n                },\n                {\n                    \"name\": \"upload\",\n                    \"id\": 100\n                },\n                {\n                    \"name\": \"uploaded\",\n                    \"id\": 101\n                },\n                {\n                    \"name\": \"modify\",\n                    \"id\": 150\n                },\n                {\n                    \"name\": \"modified\",\n                    \"id\": 151\n                }\n            ]\n        },\n        {\n            \"name\": \"StatusType\",\n            \"syntax\": \"proto2\",\n            \"values\": [\n                {\n                    \"name\": \"on\",\n                    \"id\": 1\n                },\n                {\n                    \"name\": \"off\",\n                    \"id\": 2\n                }\n            ]\n        }\n    ],\n    \"isNamespace\": true\n}).build();\n","import messages from './message-compiled';\n\nconst {\n  JsonObjectMessage,\n  UnreadTuple,\n  LogItem,\n  DataCommand,\n  SessionCommand,\n  ErrorCommand,\n  DirectCommand,\n  AckCommand,\n  UnreadCommand,\n  ConvCommand,\n  RoomCommand,\n  LogsCommand,\n  RcpCommand,\n  ReadTuple,\n  MaxReadTuple,\n  ReadCommand,\n  PresenceCommand,\n  ReportCommand,\n  GenericCommand,\n  PatchCommand,\n  PatchItem,\n  CommandType,\n  OpType,\n  StatusType,\n} = messages.push_server.messages2;\n\nexport {\n  JsonObjectMessage,\n  UnreadTuple,\n  LogItem,\n  DataCommand,\n  SessionCommand,\n  ErrorCommand,\n  DirectCommand,\n  AckCommand,\n  UnreadCommand,\n  ConvCommand,\n  RoomCommand,\n  LogsCommand,\n  RcpCommand,\n  ReadTuple,\n  MaxReadTuple,\n  ReadCommand,\n  PresenceCommand,\n  ReportCommand,\n  GenericCommand,\n  PatchCommand,\n  PatchItem,\n  CommandType,\n  OpType,\n  StatusType,\n};\n","/* eslint-disable */\nexport default typeof global !== 'undefined' ? global :\n  typeof window !== 'undefined' ? window : {};\n","import d from 'debug';\n\nconst EXPIRED = Symbol('expired');\nconst debug = d('LC:Expirable');\nexport default class Expirable {\n  constructor(value, ttl) {\n    this._value = value;\n    if (typeof ttl === 'number') {\n      this.expiredAt = Date.now() + ttl;\n    }\n  }\n\n  get value() {\n    const expired = this.expiredAt && this.expiredAt < Date.now();\n    if (expired) debug(`expired: ${this._value}`);\n    return expired ? EXPIRED : this._value;\n  }\n}\nExpirable.EXPIRED = EXPIRED;\n","import d from 'debug';\nimport Expirable from './expirable';\n\nconst debug = d('LC:Cache');\nexport default class Cache {\n  constructor(name = 'anonymous') {\n    this.name = name;\n    this._map = {};\n  }\n\n  get(key) {\n    const cache = this._map[key];\n    if (cache) {\n      const { value } = cache;\n      if (value !== Expirable.EXPIRED) {\n        debug('[%s] hit: %s %O', this.name, key, value);\n        return value;\n      }\n      delete this._map[key];\n    }\n    debug(`[${this.name}] missed: ${key}`);\n    return null;\n  }\n\n  set(key, value, ttl) {\n    debug('[%s] set: %s %O %d', this.name, key, value, ttl);\n    this._map[key] = new Expirable(value, ttl);\n  }\n}\n","import isPlainObject from 'lodash/isPlainObject';\nimport global from './global';\n\nexport { global };\n\nexport const tryAll = (promiseConstructors) => {\n  const promise = new Promise(promiseConstructors[0]);\n  if (promiseConstructors.length === 1) {\n    return promise;\n  }\n  return promise.catch(() => tryAll(promiseConstructors.slice(1)));\n};\n\nexport const tap = interceptor => value => ((interceptor(value), value));\n\nexport { default as Expirable } from './expirable';\nexport { default as Cache } from './cache';\n\nexport const decodeDate = (date) => {\n  if (!date) return date;\n  if (typeof date === 'string') {\n    return new Date(date);\n  }\n  if (date.__type === 'Date' && date.iso) {\n    return new Date(date.iso);\n  }\n  // Long\n  if (typeof date.toNumber === 'function') {\n    return new Date(date.toNumber());\n  }\n  return date;\n};\n\nexport const keyRemap = (keymap, obj) =>\n  Object.keys(obj).reduce((newObj, key) => {\n    const newKey = keymap[key] || key;\n    return Object.assign(newObj, {\n      [newKey]: obj[key],\n    });\n  }, {});\n\nexport const isIE10 = (\n  global.navigator &&\n  global.navigator.userAgent &&\n  global.navigator.userAgent.indexOf('MSIE 10.') !== -1\n);\n\n/* eslint-disable no-proto */\nexport const getStaticProperty = (klass, property) =>\n  (klass[property] || (klass.__proto__ ? getStaticProperty(klass.__proto__, property) : undefined));\n/* eslint-enable no-proto */\n\nexport const union = (a, b) => Array.from(new Set([...a, ...b]));\nexport const difference = (a, b) =>\n  Array.from((bSet => new Set(a.filter(x => !bSet.has(x))))(new Set(b)));\n\nconst map = new WeakMap();\n\n// protected property helper\nexport const internal = (object) => {\n  if (!map.has(object)) {\n    map.set(object, {});\n  }\n  return map.get(object);\n};\n\n// debug utility\nconst removeNull = (obj) => {\n  if (!isPlainObject(obj)) return obj;\n  const object = Object.assign({}, obj);\n  // eslint-disable-next-line no-restricted-syntax\n  for (const prop in object) {\n    if ({}.hasOwnProperty.call(object, prop)) {\n      const value = object[prop];\n      if (value === null) {\n        delete object[prop];\n      } else {\n        object[prop] = removeNull(value);\n      }\n    }\n  }\n  return object;\n};\nexport const trim = message => removeNull(JSON.parse(JSON.stringify(message)));\n\nexport const ensureArray = (target) => {\n  if (Array.isArray(target)) {\n    return target;\n  }\n  if (target === undefined || target === null) {\n    return [];\n  }\n  return [target];\n};\n\nexport const setValue = (target, key, value) => {\n  // '.' is not allowed in Class keys, escaping is not in concern now.\n  const segs = key.split('.');\n  const lastSeg = segs.pop();\n  let currentTarget = target;\n  segs.forEach((seg) => {\n    if (currentTarget[seg] === undefined) currentTarget[seg] = {};\n    currentTarget = currentTarget[seg];\n  });\n  currentTarget[lastSeg] = value;\n  return target;\n};\n\n// eslint-disable-next-line no-undef\nexport const isWeapp = typeof wx === 'object' && typeof wx.connectSocket === 'function';\n\n// throttle decorator\nexport const throttle = wait => (target, property, descriptor) => {\n  const callback = descriptor.value;\n  // very naive, internal use only\n  if (callback.length) {\n    throw new Error('throttled function should not accept any arguments');\n  }\n  return {\n    ...descriptor,\n    value() {\n      let {\n        throttleMeta,\n      } = internal(this);\n      if (!throttleMeta) {\n        throttleMeta = {};\n        internal(this).throttleMeta = throttleMeta;\n      }\n      let {\n        [property]: propertyMeta,\n      } = throttleMeta;\n      if (!propertyMeta) {\n        propertyMeta = {};\n        throttleMeta[property] = propertyMeta;\n      }\n      const {\n        previouseTimestamp = 0,\n        timeout,\n      } = propertyMeta;\n      const now = Date.now();\n      const remainingTime = wait - (now - previouseTimestamp);\n      if (remainingTime <= 0) {\n        throttleMeta[property].previouseTimestamp = now;\n        callback.apply(this);\n      } else if (!timeout) {\n        propertyMeta.timeout = setTimeout(() => {\n          propertyMeta.previouseTimestamp = Date.now();\n          delete propertyMeta.timeout;\n          callback.apply(this);\n        }, remainingTime);\n      }\n    },\n  };\n};\n","// WebSocket with auto reconnecting feature, backup endpoint and EventEmitter interface.\n\nimport d from 'debug';\nimport EventEmitter from 'eventemitter3';\nimport StateMachine from 'javascript-state-machine';\n\nimport WebSocket from 'ws';\n\nimport { tryAll, global } from './utils';\n\nconst debug = d('LC:WebSocketPlus');\n\nconst HEARTBEAT_TIME = 180000;\nconst TIMEOUT_TIME = 380000;\n\nconst DEFAULT_RETRY_STRATEGY = attempt => Math.min(1000 * (2 ** attempt), 300000);\n\nconst requireConnected = (target, name, descriptor) =>\n  Object.assign({}, descriptor, {\n    value: function requireConnectedWrapper(...args) {\n      if (!this.is('connected')) {\n        const currentState = this.current;\n        console.warn(`${name} should not be called when the connection is ${currentState}`);\n        if (this.is('disconnected') || this.is('reconnecting')) {\n          console.warn('disconnect and reconnect event should be handled to avoid such calls.');\n        }\n        throw new Error('Connection unavailable');\n      }\n      return descriptor.value.call(this, ...args);\n    },\n  });\n\nclass WebSocketPlus extends EventEmitter {\n  constructor(getUrls, protocol) {\n    if (typeof WebSocket === 'undefined') {\n      throw new Error('WebSocket is undefined. Polyfill is required in this runtime.');\n    }\n    super();\n    if (typeof getUrls !== 'function') {\n      this._getUrls = () => Promise.resolve(getUrls);\n    } else {\n      this._getUrls = getUrls;\n    }\n    this._protocol = protocol;\n    this.init();\n    this._createWs(this._getUrls, this._protocol).then(() => {\n      this.__postponeTimeoutTimer = this._postponeTimeoutTimer.bind(this);\n      if (global.addEventListener) {\n        this.__pause = () => this.pause();\n        this.__resume = () => this.resume();\n        global.addEventListener('offline', this.__pause);\n        global.addEventListener('online', this.__resume);\n      }\n      this.open();\n    }).catch(this.throw.bind(this));\n  }\n\n  _createWs(getUrls, protocol) {\n    return getUrls().then((wsUrls) => {\n      let urls = wsUrls;\n      if (!(urls instanceof Array)) {\n        urls = [urls];\n      }\n      return tryAll(urls.map(url => (resolve, reject) => {\n        debug(`connect [${url}] ${protocol}`);\n        const ws = protocol ? new WebSocket(url, protocol) : new WebSocket(url);\n        ws.binaryType = this.binaryType || 'arraybuffer';\n        ws.onopen = () => resolve(ws);\n        ws.onclose = (error) => {\n          if (error instanceof Error) {\n            return reject(error);\n          }\n          // in browser, error event is useless\n          return reject(new Error(`Failed to connect [${url}]`));\n        };\n        ws.onerror = ws.onclose;\n      })).then((ws) => {\n        this._ws = ws;\n        this._ws.onclose = this._handleClose.bind(this);\n        this._ws.onmessage = this._handleMessage.bind(this);\n        return ws;\n      });\n    });\n  }\n  _destroyWs() {\n    const ws = this._ws;\n    if (!ws) return;\n    ws.onopen = null;\n    ws.onclose = null;\n    ws.onerror = null;\n    ws.onmessage = null;\n    this._ws = null;\n    ws.close();\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  onbeforeevent(event, from, to, ...payload) {\n    debug(`${event}: ${from} -> ${to}`, ...payload);\n  }\n  onopen() {\n    this.emit('open');\n  }\n  onconnected() {\n    this._startConnectionKeeper();\n  }\n  onleaveconnected(event, from, to) {\n    this._stopConnectionKeeper();\n    this._destroyWs();\n    if (to === 'offline' || to === 'disconnected') {\n      this.emit('disconnect');\n    }\n  }\n  onpause() {\n    this.emit('offline');\n  }\n  onbeforeresume() {\n    this.emit('online');\n  }\n  onreconnect() {\n    this.emit('reconnect');\n  }\n  ondisconnected(event, from, to, attempt = 0) {\n    const delay = DEFAULT_RETRY_STRATEGY.call(null, attempt);\n    debug(`schedule attempt=${attempt} delay=${delay}`);\n    this.emit('schedule', attempt, delay);\n    if (this.__scheduledRetry) {\n      clearTimeout(this.__scheduledRetry);\n    }\n    this.__scheduledRetry = setTimeout(() => {\n      if (this.is('disconnected')) {\n        this.retry(attempt);\n      }\n    }, delay);\n  }\n  onretry(event, from, to, attempt = 0) {\n    this.emit('retry', attempt);\n    this._createWs(this._getUrls, this._protocol).then(\n      () => (this.can('reconnect') ? this.reconnect() : this._destroyWs()),\n      () => this.can('fail') && this.fail(attempt + 1),\n    );\n  }\n  onerror(event, from, to, error) {\n    this.emit('error', error);\n  }\n  onclose() {\n    if (global.removeEventListener) {\n      if (this.__pause) global.removeEventListener('offline', this.__pause);\n      if (this.__resume) global.removeEventListener('online', this.__resume);\n    }\n  }\n\n  // jsdoc-ignore-start\n  @requireConnected\n  // jsdoc-ignore-end\n  _ping() {\n    debug('ping');\n    try {\n      this.ping();\n    } catch (error) {\n      console.warn(`websocket ping error: ${error.message}`);\n    }\n  }\n  ping() {\n    if (this._ws.ping) {\n      this._ws.ping();\n    } else {\n      console.warn(`The WebSocket implement does not support sending ping frame.\n        Override ping method to use application defined ping/pong mechanism.`);\n    }\n  }\n\n  _postponeTimeoutTimer() {\n    debug('_postponeTimeoutTimer');\n    this._clearTimeoutTimers();\n    this._timeoutTimer = setTimeout(() => {\n      debug('timeout');\n      this.disconnect();\n    }, TIMEOUT_TIME);\n  }\n  _clearTimeoutTimers() {\n    if (this._timeoutTimer) {\n      clearTimeout(this._timeoutTimer);\n    }\n  }\n  _startConnectionKeeper() {\n    debug('start connection keeper');\n    this._heartbeatTimer = setInterval(this._ping.bind(this), HEARTBEAT_TIME);\n    const addListener = this._ws.addListener || this._ws.addEventListener;\n    addListener.call(this._ws, 'message', this.__postponeTimeoutTimer);\n    addListener.call(this._ws, 'pong', this.__postponeTimeoutTimer);\n    this._postponeTimeoutTimer();\n  }\n  _stopConnectionKeeper() {\n    debug('stop connection keeper');\n    // websockets/ws#489\n    const removeListener = this._ws.removeListener || this._ws.removeEventListener;\n    removeListener.call(this._ws, 'message', this.__postponeTimeoutTimer);\n    removeListener.call(this._ws, 'pong', this.__postponeTimeoutTimer);\n    this._clearTimeoutTimers();\n    if (this._heartbeatTimer) {\n      clearInterval(this._heartbeatTimer);\n    }\n  }\n\n  _handleClose(event) {\n    debug(`ws closed [${event.code}] ${event.reason}`);\n    // socket closed manually, ignore close event.\n    if (this.isFinished()) return;\n    this.handleClose(event);\n  }\n  handleClose() {\n    // reconnect\n    this.disconnect();\n  }\n\n  // jsdoc-ignore-start\n  @requireConnected\n  // jsdoc-ignore-end\n  send(data) {\n    debug('send', data);\n    this._ws.send(data);\n  }\n\n  _handleMessage(event) {\n    debug('message', event.data);\n    this.handleMessage(event.data);\n  }\n  handleMessage(message) {\n    this.emit('message', message);\n  }\n}\n\nStateMachine.create({\n  target: WebSocketPlus.prototype,\n  initial: {\n    state: 'initialized',\n    event: 'init',\n    defer: true,\n  },\n  terminal: 'closed',\n  events: [{\n    name: 'open',\n    from: 'initialized',\n    to: 'connected',\n  }, {\n    name: 'disconnect',\n    from: 'connected',\n    to: 'disconnected',\n  }, {\n    name: 'retry',\n    from: 'disconnected',\n    to: 'reconnecting',\n  }, {\n    name: 'fail',\n    from: 'reconnecting',\n    to: 'disconnected',\n  }, {\n    name: 'reconnect',\n    from: 'reconnecting',\n    to: 'connected',\n  }, {\n    name: 'pause',\n    from: ['connected', 'disconnected', 'reconnecting'],\n    to: 'offline',\n  }, {\n  }, {\n    name: 'resume',\n    from: 'offline',\n    to: 'disconnected',\n  }, {\n    name: 'close',\n    from: ['connected', 'disconnected', 'reconnecting', 'offline'],\n    to: 'closed',\n  }, {\n    name: 'throw',\n    from: '*',\n    to: 'error',\n  }],\n});\n\nexport default WebSocketPlus;\n","export const error = Object.freeze({\n  1000: {\n    name: 'CLOSE_NORMAL',\n  },\n  1006: {\n    name: 'CLOSE_ABNORMAL',\n  },\n  4100: {\n    name: 'APP_NOT_AVAILABLE',\n    message: 'App not exists or realtime message service is disabled.',\n  },\n  4103: {\n    name: 'INVALID_LOGIN',\n    message: 'Malformed clientId.',\n  },\n  4105: {\n    name: 'SESSION_REQUIRED',\n    message: 'Message sent before session opened. ',\n  },\n  4107: {\n    name: 'READ_TIMEOUT',\n  },\n  4108: {\n    name: 'LOGIN_TIMEOUT',\n  },\n  4109: {\n    name: 'FRAME_TOO_LONG',\n  },\n  4110: {\n    name: 'INVALID_ORIGIN',\n    message: 'Access denied by domain whitelist.',\n  },\n  4111: {\n    name: 'SESSION_CONFLICT',\n  },\n  4112: {\n    name: 'SESSION_TOKEN_EXPIRED',\n  },\n  4200: {\n    name: 'INTERNAL_ERROR',\n    message: 'Internal error, please contact LeanCloud for support.',\n  },\n  4201: {\n    name: 'SEND_MESSAGE_TIMEOUT',\n  },\n  4302: {\n    name: 'CONVERSATION_SIGNATURE_FAILED',\n  },\n  4303: {\n    name: 'CONVERSATION_NOT_FOUND',\n  },\n  4304: {\n    name: 'CONVERSATION_FULL',\n  },\n  4305: {\n    name: 'CONVERSATION_REJECTED_BY_APP',\n  },\n  4306: {\n    name: 'CONVERSATION_UPDATE_FAILED',\n  },\n  4307: {\n    name: 'CONVERSATION_READ_ONLY',\n  },\n  4308: {\n    name: 'CONVERSATION_NOT_ALLOWED',\n  },\n  4401: {\n    name: 'INVALID_MESSAGING_TARGET',\n  },\n  4402: {\n    name: 'MESSAGE_REJECTED_BY_APP',\n  },\n});\n\nexport const ErrorCode = Object.freeze(Object.keys(error).reduce(\n  (result, code) => Object.assign(result, {\n    [error[code].name]: Number(code),\n  }),\n  {},\n));\n\nexport const createError = (errorMessage) => {\n  const {\n    code, reason, appCode, detail,\n  } = errorMessage;\n  let message = reason || detail;\n  if (!message && error[code]) {\n    message = error[code].message || error[code].name;\n  }\n  if (!message) {\n    message = `Unknow Error: ${code}`;\n  }\n  const err = new Error(message);\n  return Object.assign(err, {\n    code, appCode, detail,\n  });\n};\n","import d from 'debug';\nimport WebSocketPlus from './websocket-plus';\nimport { createError } from './error';\nimport { GenericCommand, CommandType } from '../proto/message';\nimport { trim, isWeapp } from './utils';\n\nconst debug = d('LC:Connection');\n\nconst COMMAND_TIMEOUT = 20000;\n\nexport default class Connection extends WebSocketPlus {\n  constructor(getUrl, { format, version }) {\n    debug('initializing Connection');\n    const protocolString = `lc.${format}.${version}`;\n    if (!isWeapp) {\n      super(getUrl, protocolString);\n    } else {\n      super(getUrl().then(urls => urls.map(url =>\n        `${url}${url.indexOf('?') === -1 ? '?' : '&'}subprotocol=${encodeURIComponent(protocolString)}`)));\n    }\n    this._protocalFormat = format;\n    this._commands = {};\n    this._serialId = 0;\n  }\n\n  send(command, waitingForRespond = true) {\n    let serialId;\n    if (waitingForRespond) {\n      this._serialId += 1;\n      serialId = this._serialId;\n      command.i = serialId; // eslint-disable-line no-param-reassign\n    }\n    debug('↑ %O sent', trim(command));\n\n    let message;\n    if (this._protocalFormat === 'proto2base64') {\n      message = command.toBase64();\n    } else if (command.toArrayBuffer) {\n      message = command.toArrayBuffer();\n    }\n    if (!message) {\n      throw new TypeError(`${command} is not a GenericCommand`);\n    }\n\n    super.send(message);\n\n    if (!waitingForRespond) {\n      return Promise.resolve();\n    }\n    return new Promise((resolve, reject) => {\n      this._commands[serialId] = {\n        resolve,\n        reject,\n        timeout: setTimeout(\n          () => {\n            if (this._commands[serialId]) {\n              debug('✗ %O timeout', trim(command));\n              reject(new Error('Command Timeout.'));\n              delete this._commands[serialId];\n            }\n          },\n          COMMAND_TIMEOUT,\n        ),\n      };\n    });\n  }\n\n  handleMessage(msg) {\n    let message;\n    try {\n      message = GenericCommand.decode(msg);\n      debug('↓ %O received', trim(message));\n    } catch (e) {\n      console.warn('Decode message failed', msg);\n    }\n    this.emit('allmessage', message);\n    const serialId = message.i;\n    if (serialId) {\n      if (this._commands[serialId]) {\n        clearTimeout(this._commands[serialId].timeout);\n        if (message.cmd === CommandType.error) {\n          this\n            ._commands[serialId]\n            .reject(createError(message.errorMessage));\n        } else {\n          this\n            ._commands[serialId]\n            .resolve(message);\n        }\n        delete this._commands[serialId];\n      } else {\n        console.warn(`Unexpected command received with serialId [${serialId}],\n         which have timed out or never been requested.`);\n      }\n    } else if (message.cmd === CommandType.error) {\n      this.emit('error', createError(message.errorMessage));\n    } else {\n      this.emit('message', message);\n    }\n  }\n\n  ping() {\n    return this.send(new GenericCommand({\n      cmd: CommandType.echo,\n    })).catch(error => debug('ping failed:', error));\n  }\n}\n","/* eslint-disable max-len */\n\n/**\n * 插件接口\n *\n * <p>\n * 插件是由一个或多个扩展点组成的字典。SDK 的扩展点可以分为两类：\n * <p>\n * 第一类扩展点是类实例化之后的回调，包括 <code>Realtime</code>、<code>IMClient</code> 与 <code>Conversation</code>。这些扩展点可以通过一个同步的 Decorator 进行扩展。Decorator 接受一个对应的实例并对其进行一些操作。\n * 特别的，由于注册自定义消息类这个需求特别的常用，额外定义一个 messageClasses 扩展点来做这件事情。\n * <p>\n * 第二类扩展点是在某些事件处理前、后可以注入逻辑的点。\n * 其中 <code>beforeMessageParse</code>，<code>afterMessageParse</code> 可以通过一个异步的 Middleware 进行扩展。Middleware 接受一个对象，返回一个同类型对象或同类型对象的 Promise。\n * <code>beforeMessageDispatch</code> 可以通过返回一个 boolean 类型的 shouldDispatch 值来控制是否要继续派发收到的消息。\n * <p>\n * 如果使用了多个插件，这些 hook 会按照插件数组的顺序依次执行。前一个 Middleware 的返回值会作为参数传给后一个 Middleware。\n *\n * @interface Plugin\n * @since 3.1.0\n */\n\n/* eslint-enable max-len */\n\n/**\n * 插件名称，用于在日志中显示异常的插件\n *\n * @name Plugin.name\n * @type string\n */\n\n/**\n * 插件注册的消息类型\n *\n * @name Plugin.messageClasses\n * @type AVMessage[]\n */\n\n/**\n * 在 Realtime 实例化后对其进行修饰。\n * <p>\n * 接受一个参数为 Realtime 实例。\n *\n * @name Plugin.onRealtimeCreate\n * @type Function\n */\n\n/**\n * 在 IMClient 实例化后对其进行修饰。\n * <p>\n * 接受一个参数为 IMClient 实例。\n *\n * @name Plugin.onIMClientCreate\n * @type Function\n */\n\n/**\n * 在 Conversation 实例化后对其进行修饰。\n * <p>\n * 接受一个参数为 Conversation 实例。\n * 需要注意的是，该扩展点并不是在 <code>{@link IMClient#createConversation}</code> 方法创建成功后调用的 hook，\n * 而是所有的 Conversation 实例化的时候（包括但不限于 query 时）调用的 hook。\n *\n * @name Plugin.onConversationCreate\n * @type Function\n */\n\n/**\n * 在对消息进行 parse 之前，对原始消息进行修改。\n * <p>\n * 接受一个参数为原始消息，是某个消息 JSON 化（<code>message.toJSON()</code>）的返回值，一般是一个 JSON 对象。\n * 该方法需要返回一个 JSON 对象。如果这个结果是异步得到的，也可以返回一个 Promise(fulfilled with a JSON)。\n *\n * @name Plugin.beforeMessageParse\n * @type Function\n */\n\n/**\n * 在对消息进行 parse 之后，对消息实例进行修改。\n * <p>\n * 接受一个参数为消息实例，一般是一个已注册的 Message 类或其子类的实例。\n * 该方法需要返回一个同类型的消息实例。如果这个结果是异步得到的，也可以返回一个 Promise。\n *\n * @name Plugin.afterMessageParse\n * @type Function\n */\n\n/**\n * 在收到消息之后，派发消息之前，控制是否派发这条消息。\n * <p>\n * 接受参数为 message 与 conversation。\n * 该方法需要返回 boolean 类型的值，如果返回 false 则 SDK 不再派发这条消息，后续的 beforeMessageDispatch 也不会执行。\n * 如果这个结果是异步得到的，也可以返回一个 Promise。\n *\n * @name Plugin.beforeMessageDispatch\n * @type Function\n * @since 3.4.0\n */\n\nimport { ensureArray, tap } from './utils';\n\nconst checkType = middleware => (param) => {\n  const { constructor } = param;\n  return Promise.resolve(param).then(middleware).then(tap((result) => {\n    if (result === undefined || result === null) {\n      // eslint-disable-next-line max-len\n      return console.warn(`Middleware[${middleware._pluginName || 'anonymous plugin'}:${middleware.name || 'anonymous middleware'}] param/return types not match. It returns ${result} while a ${param.constructor.name} expected.`);\n    }\n    if (!(result instanceof constructor)) {\n      // eslint-disable-next-line max-len\n      return console.warn(`Middleware[${middleware._pluginName || 'anonymous plugin'}:${middleware.name || 'anonymous middleware'}] param/return types not match. It returns a ${result.constructor.name} while a ${param.constructor.name} expected.`);\n    }\n    return 0;\n  }));\n};\n\nexport const applyDecorators = (decorators, target) => {\n  if (decorators) {\n    decorators.forEach((decorator) => {\n      try {\n        decorator(target);\n      } catch (error) {\n        if (decorator._pluginName) {\n          error.message += `[${decorator._pluginName}]`;\n        }\n        throw error;\n      }\n    });\n  }\n};\n\nexport const applyMiddlewares = middlewares => target =>\n  ensureArray(middlewares).reduce(\n    (previousPromise, middleware) => previousPromise\n      .then(checkType(middleware))\n      .catch((error) => {\n        if (middleware._pluginName) {\n          // eslint-disable-next-line no-param-reassign\n          error.message += `[${middleware._pluginName}]`;\n        }\n        throw error;\n      }),\n    Promise.resolve(target),\n  );\n\nexport const applyDispatcher = (dispatchers, payload) =>\n  ensureArray(dispatchers).reduce(\n    (resultPromise, dispatcher) => resultPromise.then(shouldDispatch =>\n      (shouldDispatch === false ? false : dispatcher(...payload))).catch((error) => {\n      if (dispatcher._pluginName) {\n        // eslint-disable-next-line no-param-reassign\n        error.message += `[${dispatcher._pluginName}]`;\n      }\n      throw error;\n    }),\n    Promise.resolve(true),\n  );\n","import d from 'debug';\nimport EventEmitter from 'eventemitter3';\nimport axios from 'axios';\nimport Connection from './connection';\nimport { ErrorCode, createError } from './error';\nimport { tap, Cache, trim, internal, ensureArray, isWeapp } from './utils';\nimport { applyDecorators, applyDispatcher } from './plugin';\n\nconst debug = d('LC:Realtime');\n\nconst routerCache = new Cache('push-router');\n\nexport default class Realtime extends EventEmitter {\n  /**\n   * @extends EventEmitter\n   * @param  {Object} options\n   * @param  {String} options.appId\n   * @param  {String} options.appKey （since 4.0.0）\n   * @param  {String} [options.region='cn'] 节点 id\n   * @param  {Boolean} [options.pushOfflineMessages=false] 启用推送离线消息模式（默认为发送未读消息通知模式）\n   * @param  {Boolean} [options.noBinary=false] 设置 WebSocket 使用字符串格式收发消息（默认为二进制格式）。\n   *                                            适用于 WebSocket 实现不支持二进制数据格式的情况（如微信小程序）\n   * @param  {Boolean} [options.ssl=true] 使用 wss 进行连接\n   * @param  {Plugin[]} [options.plugins] 加载插件（since 3.1.0）\n   */\n  constructor(options) {\n    debug('initializing Realtime');\n    super();\n    if (typeof options.appId !== 'string') {\n      throw new TypeError(`appId [${options.appId}] is not a string`);\n    }\n    if (typeof options.appKey !== 'string') {\n      throw new TypeError(`appKey [${options.appKey}] is not a string`);\n    }\n    this._options = Object.assign({\n      appId: undefined,\n      appKey: undefined,\n      region: 'cn',\n      pushOfflineMessages: false,\n      noBinary: isWeapp,\n      ssl: true,\n      server: process.env.SERVER,\n    }, options);\n    this._cache = new Cache('endpoints');\n    internal(this).clients = new Set();\n    this._plugins = [\n      ...ensureArray(Realtime.__preRegisteredPlugins),\n      ...ensureArray(options.plugins),\n    ].reduce(\n      (result, plugin) => {\n        // eslint-disable-next-line no-restricted-syntax\n        for (const hook in plugin) {\n          if ({}.hasOwnProperty.call(plugin, hook) && hook !== 'name') {\n            if (plugin.name) {\n              ensureArray(plugin[hook]).forEach((value) => {\n                // eslint-disable-next-line no-param-reassign\n                value._pluginName = plugin.name;\n              });\n            }\n            // eslint-disable-next-line no-param-reassign\n            result[hook] = ensureArray(result[hook]).concat(plugin[hook]);\n          }\n        }\n        return result;\n      },\n      {},\n    );\n    // onRealtimeCreate hook\n    applyDecorators(this._plugins.onRealtimeCreate, this);\n  }\n\n  async _request({\n    method,\n    version = '1.1',\n    path,\n    query,\n    headers,\n    data = {},\n  }) {\n    const { appId, region } = this._options;\n    const { api } = await this.constructor._fetchAppRouter({ appId, region });\n    const url = `https://${api}/${version}${path}`;\n    return axios(url, {\n      method,\n      params: query,\n      headers: {\n        'X-LC-Id': this._options.appId,\n        'X-LC-Key': this._options.appKey,\n        ...headers,\n      },\n      data,\n    }).then(response => response.data);\n  }\n\n  _open() {\n    if (this._openPromise) return this._openPromise;\n\n    let format = 'protobuf2';\n    if (this._options.noBinary) {\n      // 不发送 binary data，fallback to base64 string\n      format = 'proto2base64';\n    }\n    let version = 3;\n    if (this._options.pushOfflineMessages) {\n      // 不推送离线消息，而是发送对话的未读通知\n      version = 1;\n    }\n    const protocol = {\n      format,\n      version,\n    };\n    this._openPromise = new Promise((resolve, reject) => {\n      debug('No connection established, create a new one.');\n      const connection = new Connection(\n        () => this._getEndpoints(this._options),\n        protocol,\n      );\n      connection.on('open', () => resolve(connection));\n      connection.on('error', reject);\n      connection.on('message', this._dispatchCommand.bind(this));\n      /**\n       * 连接断开。\n       * 连接断开可能是因为 SDK 进入了离线状态（see {@link Realtime#event:offline}），或长时间没有收到服务器心跳。\n       * 连接断开后所有的网络操作都会失败，请在连接断开后禁用相关的 UI 元素。\n       * @event Realtime#disconnect\n       */\n      /**\n       * 计划在一段时间后尝试重新连接\n       * @event Realtime#schedule\n       * @param {Number} attempt 尝试重连的次数\n       * @param {Number} delay 延迟的毫秒数\n       */\n      /**\n       * 正在尝试重新连接\n       * @event Realtime#retry\n       * @param {Number} attempt 尝试重连的次数\n       */\n      /**\n       * 连接恢复正常。\n       * 请重新启用在 {@link Realtime#event:disconnect} 事件中禁用的相关 UI 元素\n       * @event Realtime#reconnect\n       */\n\n      /**\n       * 客户端连接断开\n       * @event IMClient#disconnect\n       * @see Realtime#event:disconnect\n       * @since 3.2.0\n       */\n      /**\n       * 计划在一段时间后尝试重新连接\n       * @event IMClient#schedule\n       * @param {Number} attempt 尝试重连的次数\n       * @param {Number} delay 延迟的毫秒数\n       * @since 3.2.0\n       */\n      /**\n       * 正在尝试重新连接\n       * @event IMClient#retry\n       * @param {Number} attempt 尝试重连的次数\n       * @since 3.2.0\n       */\n\n      /**\n       * 客户端进入离线状态。\n       * 这通常意味着网络已断开，或者 {@link Realtime#pause} 被调用\n       * @event Realtime#offline\n       * @since 3.4.0\n       */\n      /**\n       * 客户端恢复在线状态\n       * 这通常意味着网络已恢复，或者 {@link Realtime#resume} 被调用\n       * @event Realtime#online\n       * @since 3.4.0\n       */\n      /**\n       * 进入离线状态。\n       * 这通常意味着网络已断开，或者 {@link Realtime#pause} 被调用\n       * @event IMClient#offline\n       * @since 3.4.0\n       */\n      /**\n       * 恢复在线状态\n       * 这通常意味着网络已恢复，或者 {@link Realtime#resume} 被调用\n       * @event IMClient#online\n       * @since 3.4.0\n       */\n\n      // event proxy\n      ['disconnect', 'reconnect', 'retry', 'schedule', 'offline', 'online'].forEach(event => connection.on(event, (...payload) => {\n        debug(`${event} event emitted. %O`, payload);\n        this.emit(event, ...payload);\n        if (event !== 'reconnect') {\n          internal(this).clients.forEach((client) => {\n            client.emit(event, ...payload);\n          });\n        }\n      }));\n      // override handleClose\n      connection.handleClose = function handleClose(event) {\n        const isFatal = [\n          ErrorCode.APP_NOT_AVAILABLE,\n          ErrorCode.INVALID_LOGIN,\n          ErrorCode.INVALID_ORIGIN,\n        ].some(errorCode => errorCode === event.code);\n        if (isFatal) {\n          // in these cases, SDK should throw.\n          this.throw(createError(event));\n        } else {\n          // reconnect\n          this.disconnect();\n        }\n      };\n      internal(this).connection = connection;\n    });\n\n    return this._openPromise;\n  }\n\n  _getEndpoints(options) {\n    return Promise.resolve(this._cache.get('endpoints') ||\n      this\n        .constructor\n        ._fetchEndpointsInfo(options)\n        .then(tap(info => this._cache.set('endpoints', info, info.ttl * 1000)))).then((info) => {\n      debug('endpoint info: %O', info);\n      return [info.server, info.secondary];\n    });\n  }\n\n  static _fetchAppRouter({ appId, region }) {\n    debug('fetch router');\n    switch (region) {\n      case 'cn': {\n        const cachedRouter = routerCache.get(appId);\n        if (cachedRouter) {\n          return Promise.resolve(cachedRouter);\n        }\n        return axios\n          .get('https://app-router.leancloud.cn/2/route', {\n            params: {\n              appId,\n            },\n            timeout: 20000,\n          })\n          .then(res => res.data)\n          .then(tap(debug))\n          .then(({\n            rtm_router_server: rtmRouter,\n            api_server: api,\n            ttl = 3600,\n          }) => {\n            if (!rtmRouter) {\n              throw new Error('rtm router not exists');\n            }\n            const router = {\n              rtmRouter,\n              api,\n            };\n            routerCache.set(appId, router, ttl * 1000);\n            return router;\n          })\n          .catch(() => {\n            const id = appId.slice(0, 8).toLowerCase();\n            return {\n              rtmRouter: `${id}.rtm.lncld.net`,\n              api: `${id}.api.lncld.net`,\n            };\n          });\n      }\n      case 'us':\n        return Promise.resolve({\n          rtmRouter: 'router-a0-push.leancloud.cn',\n          api: 'us-api.leancloud.cn',\n        });\n      default:\n        throw new Error(`Region [${region}] is not supported.`);\n    }\n  }\n\n  static _fetchEndpointsInfo({\n    appId, region, ssl, server,\n  }) {\n    debug('fetch endpoint info');\n    return this._fetchAppRouter({ appId, region })\n      .then(tap(debug))\n      .then(({ rtmRouter }) =>\n        axios.get(`https://${rtmRouter}/v1/route`, {\n          params: {\n            appId,\n            secure: ssl,\n            features: isWeapp ? 'wechat' : undefined,\n            server,\n            _t: Date.now(),\n          },\n          timeout: 20000,\n        }).then(res => res.data).then(tap(debug)));\n  }\n\n  _close() {\n    if (this._openPromise) {\n      this._openPromise.then(connection => connection.close());\n    }\n    delete this._openPromise;\n  }\n\n  /**\n   * 手动进行重连。\n   * SDK 在网络出现异常时会自动按照一定的时间间隔尝试重连，调用该方法会立即尝试重连并重置重连尝试计数器。\n   * 只能在 `schedule` 事件之后，`retry` 事件之前调用，如果当前网络正常或者正在进行重连，调用该方法会抛异常。\n   */\n  retry() {\n    const { connection } = internal(this);\n    if (!connection) {\n      throw new Error('no connection established');\n    }\n    if (connection.cannot('retry')) {\n      throw new Error(`retrying not allowed when not disconnected. the connection is now ${connection.current}`);\n    }\n    return connection.retry();\n  }\n  /**\n   * 暂停，使 SDK 进入离线状态。\n   * 你可以在网络断开、应用进入后台等时刻调用该方法让 SDK 进入离线状态，离线状态下不会尝试重连。\n   * 在浏览器中 SDK 会自动监听网络变化，因此无需手动调用该方法。\n   *\n   * @since 3.4.0\n   * @see Realtime#event:offline\n   */\n  pause() {\n    // 这个方法常常在网络断开、进入后台时被调用，此时 connection 可能没有建立或者已经 close。\n    // 因此不像 retry，这个方法应该尽可能 loose\n    const { connection } = internal(this);\n    if (!connection) return;\n    if (connection.can('pause')) connection.pause();\n  }\n  /**\n   * 恢复在线状态。\n   * 你可以在网络恢复、应用回到前台等时刻调用该方法让 SDK 恢复在线状态，恢复在线状态后 SDK 会开始尝试重连。\n   *\n   * @since 3.4.0\n   * @see Realtime#event:online\n   */\n  resume() {\n    // 与 pause 一样，这个方法应该尽可能 loose\n    const { connection } = internal(this);\n    if (!connection) return;\n    if (connection.can('resume')) connection.resume();\n  }\n\n  _register(client) {\n    internal(this).clients.add(client);\n  }\n\n  _deregister(client) {\n    internal(this).clients.delete(client);\n    if (internal(this).clients.size === 0) {\n      this._close();\n    }\n  }\n\n  _dispatchCommand(command) {\n    return applyDispatcher(this._plugins.beforeCommandDispatch, [command, this])\n      .then((shouldDispatch) => {\n        // no plugin handled this command\n        if (shouldDispatch) return debug('[WARN] Unexpected message received: %O', trim(command));\n        return false;\n      });\n  }\n}\n","import d from 'debug';\nimport { tap } from './utils';\n\nconst debug = d('LC:SignatureFactoryRunner');\n\nfunction _validateSignature(signatureResult = {}) {\n  const {\n    signature,\n    timestamp,\n    nonce,\n  } = signatureResult;\n  if (typeof signature !== 'string'\n      || typeof timestamp !== 'number'\n      || typeof nonce !== 'string') {\n    throw new Error('malformed signature');\n  }\n  return {\n    signature,\n    timestamp,\n    nonce,\n  };\n}\n\nexport default (signatureFactory, params) =>\n  Promise.resolve()\n    .then(() => {\n      debug('call signatureFactory with %O', params);\n      return signatureFactory(...params);\n    })\n    .then(\n      tap(signatureResult => debug('sign result %O', signatureResult)),\n      (error) => {\n        // eslint-disable-next-line no-param-reassign\n        error.message = `sign error: ${error.message}`;\n        debug(error);\n        throw error;\n      },\n    )\n    .then(_validateSignature);\n","import uuid from 'uuid/v4';\nimport { ensureArray } from '../utils';\n\n\n/**\n * 消息状态枚举\n * @enum {Symbol}\n * @since 3.2.0\n * @memberof module:leancloud-realtime\n */\nconst MessageStatus = {\n  /** 初始状态、未知状态 */\n  NONE: Symbol('none'),\n  /** 正在发送 */\n  SENDING: Symbol('sending'),\n  /** 已发送 */\n  SENT: Symbol('sent'),\n  /** 已送达 */\n  DELIVERED: Symbol('delivered'),\n  /** 发送失败 */\n  FAILED: Symbol('failed'),\n};\nObject.freeze(MessageStatus);\n\nconst rMessageStatus = {\n  [MessageStatus.NONE]: true,\n  [MessageStatus.SENDING]: true,\n  [MessageStatus.SENT]: true,\n  [MessageStatus.DELIVERED]: true,\n  [MessageStatus.READ]: true,\n  [MessageStatus.FAILED]: true,\n};\n\nexport { MessageStatus };\nexport default class Message {\n  /**\n   * @implements AVMessage\n   * @param  {Object|String|ArrayBuffer} content 消息内容\n   */\n  constructor(content) {\n    Object.assign(this, { content }, {\n      /**\n       * @type {String}\n       * @memberof Message#\n       */\n      id: uuid(),\n      /**\n       * 消息所在的 conversation id\n       * @memberof Message#\n       * @type {String?}\n       */\n      cid: null,\n      /**\n       * 消息发送时间\n       * @memberof Message#\n       * @type {Date}\n       */\n      timestamp: new Date(),\n      /**\n       * 消息发送者\n       * @memberof Message#\n       * @type {String}\n       */\n      from: undefined,\n      /**\n       * @var deliveredAt {?Date} 消息送达时间\n       * @memberof Message#\n       */\n      // deliveredAt,\n      /**\n       * 消息提及的用户\n       * @since 4.0.0\n       * @memberof Message#\n       * @type {String[]}\n       */\n      mentionList: [],\n      /**\n       * 消息是否提及了所有人\n       * @since 4.0.0\n       * @memberof Message#\n       * @type {Boolean}\n       */\n      mentionedAll: false,\n      _mentioned: false,\n    });\n    this._setStatus(MessageStatus.NONE);\n  }\n\n  /**\n   * 将当前消息序列化为 JSON 对象\n   * @protected\n   * @return {Object}\n   */\n  toJSON() {\n    return this.content;\n  }\n\n  /**\n   * 消息状态，值为 {@link module:leancloud-realtime.MessageStatus} 之一\n   * @type {Symbol}\n   * @readonly\n   * @since 3.2.0\n   */\n  get status() {\n    return this._status;\n  }\n\n  _setStatus(status) {\n    if (!rMessageStatus[status]) {\n      throw new Error('Invalid message status');\n    }\n    this._status = status;\n  }\n\n  /**\n   * 消息修改或撤回时间，可以通过比较其与消息的 timestamp 是否相等判断消息是否被修改过或撤回过。\n   * @type {Date}\n   * @since 3.5.0\n   */\n  get updatedAt() {\n    return this._updatedAt || this.timestamp;\n  }\n  set updatedAt(value) {\n    this._updatedAt = value;\n  }\n\n  /**\n   * 当前用户是否在该消息中被提及\n   * @type {Boolean}\n   * @readonly\n   * @since 4.0.0\n   */\n  get mentioned() {\n    return this._mentioned;\n  }\n  _updateMentioned(client) {\n    this._mentioned =\n      this.from !== client &&\n      (this.mentionedAll || this.mentionList.indexOf(client) > -1);\n  }\n  /**\n   * 获取提及用户列表\n   * @since 4.0.0\n   * @return {String[]} 提及用户的 id 列表\n   */\n  getMentionList() {\n    return this.mentionList;\n  }\n  /**\n   * 设置提及用户列表\n   * @since 4.0.0\n   * @param {String[]} clients 提及用户的 id 列表\n   * @return {Message} self\n   */\n  setMentionList(clients) {\n    this.mentionList = ensureArray(clients);\n    return this;\n  }\n  /**\n   * 设置是否提及所有人\n   * @since 4.0.0\n   * @param {Boolean} [value=true]\n   * @return {Messaeg} self\n   */\n  mentionAll(value = true) {\n    this.mentionedAll = Boolean(value);\n    return this;\n  }\n\n  /**\n   * 判断给定的内容是否是有效的 Message，\n   * 该方法始终返回 true\n   * @protected\n   * @returns {Boolean}\n   * @implements AVMessage.validate\n   */\n  static validate() {\n    return true;\n  }\n\n  /**\n   * 解析处理消息内容\n   * <pre>\n   * 如果子类提供了 message，返回该 message\n   * 如果没有提供，将 json 作为 content 实例化一个 Message\n   * @protected\n   * @param  {Object}  json    json 格式的消息内容\n   * @param  {Message} message 子类提供的 message\n   * @return {Message}\n   * @implements AVMessage.parse\n   */\n  static parse(json, message) {\n    return message || new this(json);\n  }\n}\n","/* eslint-disable no-param-reassign */\nimport { getStaticProperty, isIE10 } from '../utils';\n\n// documented in ../index.js\nexport const messageType = (type) => {\n  if (typeof type !== 'number') {\n    throw new TypeError(`${type} is not a Number`);\n  }\n  return (target) => {\n    target.TYPE = type;\n    target.validate = json => (json._lctype === type);\n    target.prototype._getType = () => ({ _lctype: type });\n  };\n};\n\n// documented in ../index.js\nexport const messageField = (fields) => {\n  if (typeof fields !== 'string') {\n    if (!Array.isArray(fields)) {\n      throw new TypeError(`${fields} is not an Array`);\n    } else if (fields.some(value => typeof value !== 'string')) {\n      throw new TypeError('fields contains non-string typed member');\n    }\n  }\n  return (target) => {\n    // IE10 Hack:\n    // static properties in IE10 will not be inherited from super\n    // search for parse method and assign it manually\n    let originalCustomFields = isIE10\n      ? getStaticProperty(target, '_customFields')\n      : target._customFields;\n    originalCustomFields = Array.isArray(originalCustomFields)\n      ? originalCustomFields : [];\n    target._customFields = originalCustomFields.concat(fields);\n  };\n};\n\n// IE10 Hack:\n// static properties in IE10 will not be inherited from super\n// search for parse method and assign it manually\n\nexport const IE10Compatible = (target) => {\n  if (isIE10) {\n    target.parse = getStaticProperty(target, 'parse');\n  }\n};\n","import Message from './message';\nimport { messageField } from './helpers';\nimport { getStaticProperty, isIE10 } from '../utils';\n\n// jsdoc-ignore-start\n@messageField(['_lctext', '_lcattrs'])\n// jsdoc-ignore-end\nexport default class TypedMessage extends Message {\n  /**\n   * 所有内置的富媒体消息均继承自本类\n   * @extends Message\n   */\n  constructor() {\n    super();\n    this._ = {};\n  }\n\n  /**\n   * @type {Number}\n   * @readonly\n   */\n  get type() {\n    return this.constructor.TYPE;\n  }\n\n  /** @type {String} */\n  set text(text) {\n    return this.setText(text);\n  }\n  get text() {\n    return this.getText();\n  }\n\n  /** @type {Object} */\n  set attributes(attributes) {\n    return this.setAttributes(attributes);\n  }\n  get attributes() {\n    return this.getAttributes();\n  }\n\n  /**\n   * 在客户端需要以文本形式展示该消息时显示的文案，\n   * 如 <code>[红包] 新春快乐</code>。\n   * 默认值为消息的 text。\n   * @type {String}\n   * @readonly\n   */\n  get summary() {\n    return this.text;\n  }\n\n  /**\n   * @param {String} text\n   * @return {TypedMessage} self\n   */\n  setText(text) {\n    this._lctext = text;\n    return this;\n  }\n  /**\n   * @return {String}\n   */\n  getText() {\n    return this._lctext;\n  }\n\n  /**\n   * @param {Object} attributes\n   * @return {TypedMessage} self\n   */\n  setAttributes(attributes) {\n    this._lcattrs = attributes;\n    return this;\n  }\n  /**\n   * @return {Object}\n   */\n  getAttributes() {\n    return this._lcattrs;\n  }\n\n  _getCustomFields() {\n    const fields = Array.isArray(this.constructor._customFields)\n      ? this.constructor._customFields : [];\n    return fields.reduce((result, field) => {\n      if (typeof field !== 'string') return result;\n      result[field] = this[field]; // eslint-disable-line no-param-reassign\n      return result;\n    }, {});\n  }\n\n  /* eslint-disable class-methods-use-this */\n  _getType() {\n    throw new Error('not implemented');\n  }\n  /* eslint-enable class-methods-use-this */\n\n  toJSON() {\n    return Object.assign({\n      _lctext: this.getText(),\n      _lcattrs: this.getAttributes(),\n    }, this._getCustomFields(), this._getType());\n  }\n\n  /**\n   * 解析处理消息内容\n   * <pre>\n   * 为给定的 message 设置 text 与 attributes 属性，返回该 message\n   * 如果子类没有提供 message，new this()\n   * @protected\n   * @param  {Object}  json    json 格式的消息内容\n   * @param  {TypedMessage} message 子类提供的 message\n   * @return {TypedMessage}\n   * @implements AVMessage.parse\n   */\n  static parse(json, message = new this()) {\n    message.content = json; // eslint-disable-line no-param-reassign\n    const customFields = isIE10\n      ? getStaticProperty(message.constructor, '_customFields')\n      : message.constructor._customFields;\n    let fields = Array.isArray(customFields) ? customFields : [];\n    fields = fields.reduce((result, field) => {\n      if (typeof field !== 'string') return result;\n      result[field] = json[field]; // eslint-disable-line no-param-reassign\n      return result;\n    }, {});\n    Object.assign(message, fields);\n    return super.parse(json, message);\n  }\n}\n","import TypedMessage from './typed-message';\nimport { messageType } from './helpers';\n\n// jsdoc-ignore-start\n@messageType(-127)\n// jsdoc-ignore-end\n/**\n * 已撤回类型消息，当消息被撤回时，SDK 会使用该类型的消息替代原始消息\n * @extends TypedMessage\n */\nclass RecalledMessage extends TypedMessage {\n  /**\n   * 在客户端需要以文本形式展示该消息时显示的文案，值为 <code>[该消息已撤回]</code>\n   * @type {String}\n   * @readonly\n   */\n  // eslint-disable-next-line class-methods-use-this\n  get summary() {\n    return '[该消息已撤回]';\n  }\n}\nexport default RecalledMessage;\n","import EventEmitter from 'eventemitter3';\nimport isEmpty from 'lodash/isEmpty';\nimport cloneDeep from 'lodash/cloneDeep';\nimport { decode as decodeBase64 } from 'base64-arraybuffer';\nimport d from 'debug';\nimport { decodeDate, keyRemap, union, difference, internal, setValue } from './utils';\nimport { applyDecorators } from './plugin';\nimport IMClient from './im-client';\nimport {\n  GenericCommand,\n  ConvCommand,\n  JsonObjectMessage,\n  DirectCommand,\n  LogsCommand,\n  PatchCommand,\n  PatchItem,\n  CommandType,\n  OpType,\n} from '../proto/message';\nimport runSignatureFactory from './signature-factory-runner';\nimport { createError } from './error';\nimport Message, { MessageStatus } from './messages/message';\nimport RecalledMessage from './messages/recalled-message';\n\nconst debug = d('LC:Conversation');\n\nconst serializeMessage = (message) => {\n  const content = message.toJSON();\n  let msg;\n  let binaryMsg;\n  if (content instanceof ArrayBuffer) {\n    binaryMsg = content;\n  } else if (typeof content !== 'string') {\n    msg = JSON.stringify(content);\n  } else {\n    msg = content;\n  }\n  return { msg, binaryMsg };\n};\n\nconst {\n  NEW,\n  OLD,\n} = LogsCommand.QueryDirection;\n\n/**\n * 历史消息查询方向枚举\n * @enum {Number}\n * @since 4.0.0\n * @memberof module:leancloud-realtime\n */\nconst MessageQueryDirection = {\n  /** 从后向前 */\n  NEW_TO_OLD: OLD,\n  /** 从前向后 */\n  OLD_TO_NEW: NEW,\n};\nObject.freeze(MessageQueryDirection);\n\nexport { MessageQueryDirection };\n\nexport default class Conversation extends EventEmitter {\n  /**\n   * 无法直接实例化，请使用 {@link IMClient#createConversation} 创建新的对话\n   * @extends EventEmitter\n   */\n  constructor({\n    id,\n    creator,\n    createdAt,\n    updatedAt,\n    lastMessageAt,\n    lastMessage,\n    mutedMembers = [],\n    members = [],\n    transient = false,\n    system = false,\n    muted = false,\n    mentioned = false,\n    // jsdoc-ignore-start\n    ...attributes\n    // jsdoc-ignore-end\n  }, client) {\n    super();\n    Object.assign(this, {\n      /**\n       * 对话 id，对应 _Conversation 表中的 objectId\n       * @memberof Conversation#\n       * @type {String}\n       */\n      id,\n      /**\n       * 对话创建者\n       * @memberof Conversation#\n       * @type {String}\n       */\n      creator,\n      /**\n       * 对话创建时间\n       * @memberof Conversation#\n       * @type {Date}\n       */\n      createdAt,\n      /**\n       * 对话更新时间\n       * @memberof Conversation#\n       * @type {Date}\n       */\n      updatedAt,\n      /**\n       * 最后一条消息时间\n       * @memberof Conversation#\n       * @type {?Date}\n       */\n      lastMessageAt,\n      /**\n       * 最后一条消息\n       * @memberof Conversation#\n       * @type {?Message}\n       */\n      lastMessage,\n      /**\n       * 对该对话设置了静音的用户列表\n       * @memberof Conversation#\n       * @type {?String[]}\n       */\n      mutedMembers,\n      /**\n       * 参与该对话的用户列表\n       * @memberof Conversation#\n       * @type {String[]}\n       */\n      members,\n      /**\n       * 暂态对话标记\n       * @memberof Conversation#\n       * @type {Boolean}\n       */\n      transient,\n      /**\n       * 系统对话标记\n       * @memberof Conversation#\n       * @type {Boolean}\n       * @since 3.3.0\n       */\n      system,\n      /**\n       * 当前用户静音该对话标记\n       * @memberof Conversation#\n       * @type {Boolean}\n       */\n      muted,\n    });\n    this._attributes = attributes;\n    this._reset();\n    this.members = Array.from(new Set(this.members));\n    Object.assign(internal(this), {\n      messagesWaitingForReceipt: {},\n      lastDeliveredAt: null,\n      lastReadAt: null,\n      unreadMessagesCount: 0,\n      mentioned,\n    });\n    if (client instanceof IMClient) {\n      this._client = client;\n    } else {\n      throw new TypeError('Conversation must be initialized with a client');\n    }\n    [\n      'kicked',\n      'membersjoined',\n      'membersleft',\n      'message',\n      'receipt',\n      'lastdeliveredatupdate',\n      'lastreadatupdate',\n      'messagerecall',\n      'messageupdate',\n    ].forEach(event => this.on(\n      event,\n      (...payload) => this._debug(`${event} event emitted. %O`, payload),\n    ));\n    // onConversationCreate hook\n    applyDecorators(this._client._plugins.onConversationCreate, this);\n  }\n\n  /**\n   * 当前用户是否在该对话的未读消息中被提及\n   * @type {Boolean}\n   * @since 4.0.0\n   */\n  get unreadMessagesMentioned() {\n    return internal(this).unreadMessagesMentioned;\n  }\n  _setUnreadMessagesMentioned(value) {\n    internal(this).unreadMessagesMentioned = Boolean(value);\n  }\n\n  set unreadMessagesCount(value) {\n    if (value !== this.unreadMessagesCount) {\n      internal(this).unreadMessagesCount = value;\n      this._client.emit('unreadmessagescountupdate', [this]);\n    }\n  }\n  /**\n   * 当前用户在该对话的未读消息数\n   * @type {Number}\n   */\n  get unreadMessagesCount() {\n    return internal(this).unreadMessagesCount;\n  }\n\n  set createdAt(value) {\n    this._createdAt = decodeDate(value);\n  }\n  get createdAt() {\n    return this._createdAt;\n  }\n  set updatedAt(value) {\n    this._updatedAt = decodeDate(value);\n  }\n  get updatedAt() {\n    return this._updatedAt;\n  }\n  set lastMessageAt(value) {\n    const time = decodeDate(value);\n    if (time <= this._lastMessageAt) return;\n    this._lastMessageAt = time;\n  }\n  get lastMessageAt() {\n    return this._lastMessageAt;\n  }\n  /**\n   * 最后消息送达时间，常用来实现消息的「已送达」标记，可通过 {@link Conversation#fetchReceiptTimestamps} 获取或更新该属性\n   * @type {?Date}\n   * @since 3.4.0\n   */\n  get lastDeliveredAt() {\n    if (this.members.length !== 2) return null;\n    return internal(this).lastDeliveredAt;\n  }\n  _setLastDeliveredAt(value) {\n    const date = decodeDate(value);\n    if (!(date < internal(this).lastDeliveredAt)) {\n      internal(this).lastDeliveredAt = date;\n      /**\n       * 最后消息送达时间更新\n       * @event Conversation#lastdeliveredatupdate\n       * @since 3.4.0\n       */\n      this.emit('lastdeliveredatupdate');\n    }\n  }\n  /**\n   * 最后消息被阅读时间，常用来实现发送消息的「已读」标记，可通过 {@link Conversation#fetchReceiptTimestamps} 获取或更新该属性\n   * @type {?Date}\n   * @since 3.4.0\n   */\n  get lastReadAt() {\n    if (this.members.length !== 2) return null;\n    return internal(this).lastReadAt;\n  }\n  _setLastReadAt(value) {\n    const date = decodeDate(value);\n    if (!(date < internal(this).lastReadAt)) {\n      internal(this).lastReadAt = date;\n      /**\n       * 最后消息被阅读时间更新\n       * @event Conversation#lastreadatupdate\n       * @since 3.4.0\n       */\n      this.emit('lastreadatupdate');\n    }\n  }\n\n  /**\n   * 对话名字，对应 _Conversation 表中的 name\n   * @type {String}\n   */\n  get name() {\n    return this.get('name');\n  }\n  set name(value) {\n    this.set('name', value);\n  }\n\n  /**\n   * 获取对话的自定义属性\n   * @since 3.2.0\n   * @param  {String} key key 属性的键名，'x' 对应 Conversation 表中的 x 列\n   * @return {Any} 属性的值\n   */\n  get(key) {\n    return internal(this).currentAttributes[key];\n  }\n\n  /**\n   * 设置对话的自定义属性\n   * @since 3.2.0\n   * @param {String} key 属性的键名，'x' 对应 Conversation 表中的 x 列，支持使用 'x.y.z' 来修改对象的部分字段。\n   * @param {Any} value 属性的值\n   * @return {Conversation} self\n   * @example\n   *\n   * // 设置对话的 color 属性\n   * conversation.set('color', {\n   *   text: '#000',\n   *   background: '#DDD',\n   * });\n   * // 设置对话的 color.text 属性\n   * conversation.set('color.text', '#333');\n   */\n  set(key, value) {\n    this._debug(`set [${key}]: ${value}`);\n    const { pendingAttributes } = internal(this);\n    const pendingKeys = Object.keys(pendingAttributes);\n    // suppose pendingAttributes = { 'a.b': {} }\n    // set 'a' or 'a.b': delete 'a.b'\n    const re = new RegExp(`^${key}`);\n    const childKeys = pendingKeys.filter(re.test.bind(re));\n    childKeys.forEach((k) => {\n      delete pendingAttributes[k];\n    });\n    if (childKeys.length) {\n      pendingAttributes[key] = value;\n    } else {\n      // set 'a.c': nothing to do\n      // set 'a.b.c.d': assign c: { d: {} } to 'a.b'\n      // CAUTION: non-standard API, provided by core-js\n      const parentKey = Array.find(pendingKeys, k => key.indexOf(k) === 0); // 'a.b'\n      if (parentKey) {\n        setValue(pendingAttributes[parentKey], key.slice(parentKey.length + 1), value);\n      } else {\n        pendingAttributes[key] = value;\n      }\n    }\n    // build currentAttributes\n    internal(this).currentAttributes = Object.keys(pendingAttributes)\n      .reduce(\n        (target, k) => setValue(target, k, pendingAttributes[k]),\n        cloneDeep(this._attributes),\n      );\n    return this;\n  }\n\n  _reset() {\n    internal(this).pendingAttributes = {};\n    internal(this).currentAttributes = this._attributes;\n  }\n\n  _debug(...params) {\n    debug(...params, `[${this.id}]`);\n  }\n\n  _send(command, ...args) {\n    /* eslint-disable no-param-reassign */\n    if (command.cmd === null) {\n      command.cmd = 'conv';\n    }\n    if (command.cmd === 'conv' && command.convMessage === null) {\n      command.convMessage = new ConvCommand();\n    }\n    if (command.convMessage && command.convMessage.cid === null) {\n      command.convMessage.cid = this.id;\n    }\n    /* eslint-enable no-param-reassign */\n    return this._client._send(command, ...args);\n  }\n  /**\n   * 保存当前对话的属性至服务器\n   * @return {Promise.<Conversation>} self\n   */\n  async save() {\n    this._debug('save');\n    const attr = internal(this).pendingAttributes;\n    if (isEmpty(attr)) {\n      this._debug('nothing touched, resolve with self');\n      return this;\n    }\n    this._debug('attr: %O', attr);\n    const convMessage = new ConvCommand({\n      attr: new JsonObjectMessage({\n        data: JSON.stringify(attr),\n      }),\n    });\n    const resCommand = await this._send(new GenericCommand({\n      op: 'update',\n      convMessage,\n    }));\n    this.updatedAt = resCommand.convMessage.udate;\n    this._attributes = internal(this).currentAttributes;\n    internal(this).pendingAttributes = {};\n    return this;\n  }\n\n  /**\n   * 从服务器更新对话的属性\n   * @return {Promise.<Conversation>} self\n   */\n  async fetch() {\n    const query = this._client.getQuery().equalTo('objectId', this.id);\n    await query.find();\n    return this;\n  }\n\n  /**\n   * 静音，客户端拒绝收到服务器端的离线推送通知\n   * @return {Promise.<Conversation>} self\n   */\n  async mute() {\n    this._debug('mute');\n    await this._send(new GenericCommand({\n      op: 'mute',\n    }));\n    if (!this.transient) {\n      this.muted = true;\n      this.mutedMembers = union(this.mutedMembers, [this._client.id]);\n    }\n    return this;\n  }\n\n  /**\n   * 取消静音\n   * @return {Promise.<Conversation>} self\n   */\n  async unmute() {\n    this._debug('unmute');\n    await this._send(new GenericCommand({\n      op: 'unmute',\n    }));\n    if (!this.transient) {\n      this.muted = false;\n      this.mutedMembers = difference(this.mutedMembers, [this._client.id]);\n    }\n    return this;\n  }\n\n  /**\n   * 获取对话人数，或暂态对话的在线人数\n   * @return {Promise.<Number>}\n   */\n  async count() {\n    this._debug('unmute');\n    const resCommand = await this._send(new GenericCommand({\n      op: 'count',\n    }));\n    return resCommand.convMessage.count;\n  }\n\n  /**\n   * 增加成员\n   * @param {String|String[]} clientIds 新增成员 client id\n   * @return {Promise.<Conversation>} self\n   */\n  async add(clientIds) {\n    this._debug('add', clientIds);\n    if (typeof clientIds === 'string') {\n      clientIds = [clientIds]; // eslint-disable-line no-param-reassign\n    }\n    const convMessage = new ConvCommand({\n      m: clientIds,\n    });\n    const command = new GenericCommand({\n      op: 'add',\n      convMessage,\n    });\n    if (this._client.options.conversationSignatureFactory) {\n      const params = [this.id, this._client.id, clientIds.sort(), 'add'];\n      const signatureResult = await runSignatureFactory(\n        this._client.options.conversationSignatureFactory,\n        params,\n      );\n      Object.assign(command.convMessage, keyRemap({\n        signature: 's',\n        timestamp: 't',\n        nonce: 'n',\n      }, signatureResult));\n    }\n    await this._send(command);\n    if (!this.transient && !this.system) {\n      this.members = union(this.members, clientIds);\n    }\n    return this;\n  }\n\n  /**\n   * 剔除成员\n   * @param {String|String[]} clientIds 成员 client id\n   * @return {Promise.<Conversation>} self\n   */\n  async remove(clientIds) {\n    this._debug('remove', clientIds);\n    if (typeof clientIds === 'string') {\n      clientIds = [clientIds]; // eslint-disable-line no-param-reassign\n    }\n    const convMessage = new ConvCommand({\n      m: clientIds,\n    });\n    const command = new GenericCommand({\n      op: 'remove',\n      convMessage,\n    });\n    if (this._client.options.conversationSignatureFactory) {\n      const params = [this.id, this._client.id, clientIds.sort(), 'remove'];\n      const signatureResult = await runSignatureFactory(\n        this._client.options.conversationSignatureFactory,\n        params,\n      );\n      Object.assign(command.convMessage, keyRemap({\n        signature: 's',\n        timestamp: 't',\n        nonce: 'n',\n      }, signatureResult));\n    }\n    await this._send(command);\n    if (!this.transient && !this.system) {\n      this.members = difference(this.members, clientIds);\n    }\n    return this;\n  }\n\n  /**\n   * （当前用户）加入该对话\n   * @return {Promise.<Conversation>} self\n   */\n  async join() {\n    this._debug('join');\n    return this.add(this._client.id);\n  }\n\n  /**\n   * （当前用户）退出该对话\n   * @return {Promise.<Conversation>} self\n   */\n  async quit() {\n    this._debug('quit');\n    return this.remove(this._client.id);\n  }\n\n  /**\n   * 发送消息\n   * @param  {Message} message 消息，Message 及其子类的实例\n   * @param {Object} [options] since v3.3.0，发送选项\n   * @param {Boolean} [options.transient] since v3.3.1，是否作为暂态消息发送\n   * @param {Boolean} [options.receipt] 是否需要回执，仅在普通对话中有效\n   * @param {Boolean} [options.will] since v3.4.0，是否指定该消息作为「掉线消息」发送，\n   * 「掉线消息」会延迟到当前用户掉线后发送，常用来实现「下线通知」功能\n   * @param {MessagePriority} [options.priority] 消息优先级，仅在暂态对话中有效，\n   * see: {@link module:leancloud-realtime.MessagePriority MessagePriority}\n   * @param {Object} [options.pushData] 消息对应的离线推送内容，如果消息接收方不在线，会推送指定的内容。其结构说明参见: {@link https://url.leanapp.cn/pushData 推送消息内容}\n   * @return {Promise.<Message>} 发送的消息\n   */\n  async send(message, options) {\n    this._debug(message, 'send');\n    if (!(message instanceof Message)) {\n      throw new TypeError(`${message} is not a Message`);\n    }\n    const {\n      transient,\n      receipt,\n      priority,\n      pushData,\n      will,\n    } = Object.assign(\n      {},\n      // support Message static property: sendOptions\n      message.constructor.sendOptions,\n      // support Message static property: getSendOptions\n      typeof message.constructor.getSendOptions === 'function' ? message.constructor.getSendOptions(message) : {},\n      options,\n    );\n    if (receipt) {\n      if (this.transient) {\n        console.warn('receipt option is ignored as the conversation is transient.');\n      } else if (transient) {\n        console.warn('receipt option is ignored as the message is sent transiently.');\n      } else if (this.members.length > 2) {\n        console.warn('receipt option is recommended to be used in one-on-one conversation.'); // eslint-disable-line max-len\n      }\n    }\n    if (priority && !this.transient) {\n      console.warn('priority option is ignored as the conversation is not transient.');\n    }\n    Object.assign(message, {\n      cid: this.id,\n      from: this._client.id,\n    });\n    message._setStatus(MessageStatus.SENDING);\n    const { msg, binaryMsg } = serializeMessage(message);\n    const command = new GenericCommand({\n      cmd: 'direct',\n      directMessage: new DirectCommand({\n        msg,\n        binaryMsg,\n        cid: this.id,\n        r: receipt,\n        transient,\n        dt: message.id,\n        pushData: JSON.stringify(pushData),\n        will,\n        mentionPids: message.mentionList,\n        mentionAll: message.mentionedAll,\n      }),\n      priority,\n    });\n    try {\n      const resCommand = await this._send(command, !transient);\n      if (!transient) {\n        const {\n          ackMessage: {\n            uid,\n            t,\n            code,\n            reason,\n            appCode,\n          },\n        } = resCommand;\n        if (code !== null) {\n          throw createError({\n            code, reason, appCode,\n          });\n        }\n        Object.assign(message, {\n          id: uid,\n          timestamp: new Date(t.toNumber()),\n        });\n        this.lastMessage = message;\n        this.lastMessageAt = message.timestamp;\n      }\n      message._setStatus(MessageStatus.SENT);\n      if (receipt) {\n        internal(this).messagesWaitingForReceipt[message.id] = message;\n      }\n      return message;\n    } catch (error) {\n      message._setStatus(MessageStatus.FAILED);\n      throw error;\n    }\n  }\n\n  async _update(message, newMessage, recall) {\n    this._debug('patch %O %O %O', message, newMessage, recall);\n    if (message instanceof Message) {\n      if (message.from !== this._client.id) {\n        throw new Error('Updating message from others is not allowed');\n      }\n      if (message.status !== MessageStatus.SENT && message.status !== MessageStatus.DELIVERED) {\n        throw new Error('Message is not sent');\n      }\n    } else if (!(message.id && message.timestamp)) {\n      throw new TypeError(`${message} is not a Message`);\n    }\n    let msg;\n    let binaryMsg;\n    if (!recall) {\n      const content = serializeMessage(newMessage);\n      ({ msg, binaryMsg } = content);\n    }\n    await this._send(new GenericCommand({\n      cmd: CommandType.patch,\n      op: OpType.modify,\n      patchMessage: new PatchCommand({\n        patches: [new PatchItem({\n          cid: this.id,\n          mid: message.id,\n          timestamp: Number(message.timestamp),\n          recall,\n          data: msg,\n          binaryMsg,\n          mentionPids: newMessage.mentionList,\n          mentionAll: newMessage.mentionedAll,\n        })],\n        lastPatchTime: this._client._lastPatchTime,\n      }),\n    }));\n    const {\n      id, cid, timestamp, from, _status,\n    } = message;\n    Object.assign(newMessage, {\n      id, cid, timestamp, from, _status,\n    });\n    if (this.lastMessage.id === newMessage.id) {\n      this.lastMessage = newMessage;\n    }\n    return newMessage;\n  }\n\n  /**\n   * 修改已发送的消息\n   * @param {AVMessage} message 要修改的消息，该消息必须是由当前用户发送的。也可以提供一个包含消息 {id, timestamp} 的对象\n   * @param {AVMessage} newMessage 新的消息\n   */\n  async update(message, newMessage) {\n    if (!(newMessage instanceof Message)) {\n      throw new TypeError(`${newMessage} is not a Message`);\n    }\n    return this._update(message, newMessage, false);\n  }\n\n  /**\n   * 撤回已发送的消息\n   * @param {AVMessage} message 要撤回的消息，该消息必须是由当前用户发送的。也可以提供一个包含消息 {id, timestamp} 的对象\n   */\n  async recall(message) {\n    return this._update(message, new RecalledMessage(), true);\n  }\n\n  /**\n   * 查询消息记录\n   * 如果仅需实现消息向前记录翻页查询需求，建议使用 {@link Conversation#createMessagesIterator}。\n   * 不论何种方向，获得的消息都是按照时间升序排列的。\n   * startClosed 与 endClosed 用于指定查询区间的开闭。\n   *\n   * @param  {Object} [options]\n   * @param  {Number} [options.limit] 限制查询结果的数量，目前服务端默认为 20\n   * @param  {MessageQueryDirection} [options.direction] 查询的方向。\n   * 在不指定的情况下如果 startTime 大于 endTime，则为从新到旧查询，可以实现加载聊天记录等场景。\n   * 如果 startTime 小于 endTime，则为从旧到新查询，可以实现弹幕等场景。\n   * @param  {Date}   [options.startTime] 从该时间开始查询，不传则从当前时间开始查询\n   * @param  {String} [options.startMessageId] 从该消息之前开始查询，需要与 startTime 同时使用，为防止某时刻有重复消息\n   * @param  {Boolean}[options.startClosed] 指定查询范围是否包括开始的时间点，默认不包括\n   * @param  {Date}   [options.endTime] 查询到该时间为止，不传则查询最早消息为止\n   * @param  {String} [options.endMessageId] 查询到该消息为止，需要与 endTime 同时使用，为防止某时刻有重复消息\n   * @param  {Boolean}[options.endClosed] 指定查询范围是否包括结束的时间点，默认不包括\n   *\n   * @param  {Date}   [options.beforeTime] DEPRECATED: 使用 startTime 代替。限制查询结果为小于该时间之前的消息，不传则为当前时间\n   * @param  {String} [options.beforeMessageId] DEPRECATED: 使用 startMessageId 代替。\n   * 限制查询结果为该消息之前的消息，需要与 beforeTime 同时使用，为防止某时刻有重复消息\n   * @param  {Date}   [options.afterTime] DEPRECATED: 使用 endTime 代替。限制查询结果为大于该时间之前的消息\n   * @param  {String} [options.afterMessageId] DEPRECATED: 使用 endMessageId 代替。\n   * 限制查询结果为该消息之后的消息，需要与 afterTime 同时使用，为防止某时刻有重复消息\n   * @return {Promise.<Message[]>} 消息列表\n   */\n  async queryMessages(options = {}) {\n    this._debug('query messages %O', options);\n    const {\n      beforeTime,\n      beforeMessageId,\n      afterTime,\n      afterMessageId,\n      limit,\n      direction,\n      startTime,\n      startMessageId,\n      startClosed,\n      endTime,\n      endMessageId,\n      endClosed,\n    } = options;\n    if (beforeMessageId || beforeTime || afterMessageId || afterTime) {\n      console.log('DEPRECATION: queryMessages options beforeTime, beforeMessageId, afterTime and afterMessageId are deprecated in favor of startTime, startMessageId, endTime and endMessageId.');\n      return this.queryMessages({\n        startTime: beforeTime,\n        startMessageId: beforeMessageId,\n        endTime: afterTime,\n        endMessageId: afterMessageId,\n        limit,\n      });\n    }\n    if (startMessageId && !startTime) {\n      throw new Error('query option startMessageId must be used with option startTime');\n    }\n    if (endMessageId && !endTime) {\n      throw new Error('query option endMessageId must be used with option endTime');\n    }\n    const conditions = {\n      t: startTime,\n      mid: startMessageId,\n      tIncluded: startClosed,\n      tt: endTime,\n      tmid: endMessageId,\n      ttIncluded: endClosed,\n      l: limit,\n    };\n    if (conditions.t instanceof Date) {\n      conditions.t = conditions.t.getTime();\n    }\n    if (conditions.tt instanceof Date) {\n      conditions.tt = conditions.tt.getTime();\n    }\n    if (direction !== undefined) {\n      conditions.direction = direction;\n    } else if (conditions.tt > conditions.t) {\n      conditions.direction = MessageQueryDirection.OLD_TO_NEW;\n    }\n    const resCommand = await this._send(new GenericCommand({\n      cmd: 'logs',\n      logsMessage: new LogsCommand(Object.assign(conditions, {\n        cid: this.id,\n      })),\n    }));\n    return Promise.all(resCommand.logsMessage.logs.map(async ({\n      msgId,\n      timestamp,\n      patchTimestamp,\n      from,\n      ackAt,\n      readAt,\n      data,\n      mentionAll,\n      mentionPids,\n      bin,\n    }) => {\n      const content = bin ? decodeBase64(data) : data;\n      const message = await this._client._messageParser.parse(content);\n      const messageProps = {\n        id: msgId,\n        cid: this.id,\n        timestamp: new Date(timestamp.toNumber()),\n        from,\n        deliveredAt: ackAt,\n        mentionList: mentionPids,\n        mentionedAll: mentionAll,\n      };\n      if (patchTimestamp) {\n        messageProps.updatedAt = new Date(patchTimestamp.toNumber());\n      }\n      Object.assign(message, messageProps);\n      message._updateMentioned(this._client.id);\n      let status = MessageStatus.SENT;\n      if (this.members.length === 2) {\n        if (ackAt) status = MessageStatus.DELIVERED;\n        if (ackAt) this._setLastDeliveredAt(ackAt);\n        if (readAt) this._setLastReadAt(readAt);\n      }\n      message._setStatus(status);\n      return message;\n    }));\n  }\n\n  /**\n   * 获取消息翻页迭代器\n   * @param  {Object} [options]\n   * @param  {Date}   [options.beforeTime] 限制起始查询结果为小于该时间之前的消息，不传则为当前时间\n   * @param  {String} [options.beforeMessageId] 限制起始查询结果为该消息之前的消息，需要与 beforeTime 同时使用，为防止某时刻有重复消息\n   * @param  {Number} [options.limit] 限制每页查询结果的数量，目前服务端默认为 20\n   * @return {AsyncIterater.<Promise.<IteratorResult<Message[]>>>} [AsyncIterator]{@link https://github.com/tc39/proposal-async-iteration}，调用其 next 方法返回获取下一页消息的 Promise\n   * @example\n   * var messageIterator = conversation.createMessagesIterator({ limit: 10 });\n   * messageIterator.next().then(function(result) {\n   *   // result: {\n   *   //   value: [message1, ..., message10],\n   *   //   done: false,\n   *   // }\n   * });\n   * messageIterator.next().then(function(result) {\n   *   // result: {\n   *   //   value: [message11, ..., message20],\n   *   //   done: false,\n   *   // }\n   * });\n   * messageIterator.next().then(function(result) {\n   *   // No more messages\n   *   // result: { value: [], done: true }\n   * });\n   */\n  createMessagesIterator({ beforeTime, beforeMessageId, limit } = {}) {\n    let promise;\n    return {\n      next: () => {\n        if (promise === undefined) {\n          // first call\n          promise = this.queryMessages({\n            limit,\n            startTime: beforeTime,\n            startMessageId: beforeMessageId,\n          });\n        } else {\n          promise = promise.then((prevMessages) => {\n            if (prevMessages.length === 0 || prevMessages.length < limit) {\n              // no more messages\n              return [];\n            }\n            return this.queryMessages({\n              startTime: prevMessages[0].timestamp,\n              startMessageId: prevMessages[0].id,\n              limit,\n            });\n          });\n        }\n        return promise.then(value => ({\n          value: Array.from(value),\n          done: value.length === 0 || value.length < limit,\n        }));\n      },\n    };\n  }\n\n  /**\n   * 将该会话标记为已读\n   * @return {Promise.<Conversation>} self\n   */\n  async read() {\n    this.unreadMessagesCount = 0;\n    this._setUnreadMessagesMentioned(false);\n    // 跳过暂态会话\n    if (this.transient) return this;\n    const client = this._client;\n    if (!internal(client).readConversationsBuffer) {\n      internal(client).readConversationsBuffer = new Set();\n    }\n    internal(client).readConversationsBuffer.add(this);\n    client._doSendRead();\n    return this;\n  }\n\n  _handleReceipt({ messageId, timestamp, read }) {\n    if (read) {\n      this._setLastReadAt(timestamp);\n    } else {\n      this._setLastDeliveredAt(timestamp);\n    }\n    const { messagesWaitingForReceipt } = internal(this);\n    const message = messagesWaitingForReceipt[messageId];\n    if (!message) return;\n    message._setStatus(MessageStatus.DELIVERED);\n    message.deliveredAt = timestamp;\n    delete messagesWaitingForReceipt[messageId];\n  }\n\n  /**\n   * 更新对话的最新回执时间戳（lastDeliveredAt、lastReadAt）\n   * @since 3.4.0\n   * @return {Promise.<Conversation>} this\n   */\n  async fetchReceiptTimestamps() {\n    const {\n      convMessage: {\n        maxReadTimestamp,\n        maxAckTimestamp,\n      },\n    } = await this._send(new GenericCommand({\n      op: 'max_read',\n    }));\n    this._setLastDeliveredAt(maxAckTimestamp);\n    this._setLastReadAt(maxReadTimestamp);\n    return this;\n  }\n\n  _fetchAllReceiptTimestamps() {\n    const convMessage = new ConvCommand({\n      queryAllMembers: true,\n    });\n    return this._send(new GenericCommand({\n      op: 'max_read',\n      convMessage,\n    })).then(({\n      convMessage: {\n        maxReadTuples,\n      },\n    }) => maxReadTuples\n      .filter(maxReadTuple => maxReadTuple.maxAckTimestamp || maxReadTuple.maxReadTimestamp)\n      .map(({ pid, maxAckTimestamp, maxReadTimestamp }) => ({\n        pid,\n        lastDeliveredAt: decodeDate(maxAckTimestamp),\n        lastReadAt: decodeDate(maxReadTimestamp),\n      })));\n  }\n}\n","import d from 'debug';\n\nconst debug = d('LC:ConversationQuery');\n\nexport default class ConversationQuery {\n  static _encode(value) {\n    if (value instanceof Date) {\n      return { __type: 'Date', iso: value.toJSON() };\n    }\n    if (value instanceof RegExp) {\n      return value.source;\n    }\n    return value;\n  }\n\n  static _quote(s) {\n    return `\\\\Q${s.replace('\\\\E', '\\\\E\\\\\\\\E\\\\Q')}\\\\E`;\n  }\n\n  static _calculateFlag(options) {\n    return [\n      'withLastMessagesRefreshed',\n      'compact',\n    ].reduce(\n      // eslint-disable-next-line no-bitwise\n      (prev, key) => (prev << 1) + (Boolean)(options[key]),\n      0,\n    );\n  }\n\n  /**\n   * Create a ConversationQuery\n   * @param  {IMClient} client\n   */\n  constructor(client) {\n    this._client = client;\n    this._where = {};\n    this._extraOptions = {};\n  }\n\n  _addCondition(key, condition, value) {\n    // Check if we already have a condition\n    if (!this._where[key]) {\n      this._where[key] = {};\n    }\n    this._where[key][condition] = this.constructor._encode(value);\n    return this;\n  }\n\n  toJSON() {\n    const json = {\n      where: this._where,\n      flag: this.constructor._calculateFlag(this._extraOptions),\n    };\n    if (typeof this._skip !== 'undefined') json.skip = this._skip;\n    if (typeof this._limit !== 'undefined') json.limit = this._limit;\n    if (typeof this._order !== 'undefined') json.sort = this._order;\n    debug(json);\n    return json;\n  }\n\n  /**\n   * 增加查询条件，指定聊天室的组员包含某些成员即可返回\n   * @param {string[]} peerIds - 成员 ID 列表\n   * @return {ConversationQuery} self\n   */\n  containsMembers(peerIds) {\n    return this.containsAll('m', peerIds);\n  }\n\n  /**\n   * 增加查询条件，指定聊天室的组员条件满足条件的才返回\n   *\n   * @param {string[]} - 成员 ID 列表\n   * @param {Boolean} includeSelf - 是否包含自己\n   * @return {ConversationQuery} self\n   */\n  withMembers(peerIds, includeSelf) {\n    const peerIdsSet = new Set(peerIds);\n    if (includeSelf) {\n      peerIdsSet.add(this._client.id);\n    }\n    this.sizeEqualTo('m', peerIdsSet.size);\n    return this.containsMembers(Array.from(peerIdsSet));\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段满足等于条件时即可返回\n   *\n   * @param {string} key\n   * @param value\n   * @return {ConversationQuery} self\n   */\n  equalTo(key, value) {\n    this._where[key] = this.constructor._encode(value);\n    return this;\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段满足小于条件时即可返回\n   * @param {string} key\n   * @param value\n   * @return {ConversationQuery} self\n   */\n  lessThan(key, value) {\n    return this._addCondition(key, '$lt', value);\n  }\n\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段满足小于等于条件时即可返回\n\n   * @param {string} key\n   * @param value\n   * @return {ConversationQuery} self\n   */\n  lessThanOrEqualTo(key, value) {\n    return this._addCondition(key, '$lte', value);\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段满足大于条件时即可返回\n   *\n   * @param {string} key\n   * @param value\n   * @return {ConversationQuery} self\n   */\n\n  greaterThan(key, value) {\n    return this._addCondition(key, '$gt', value);\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段满足大于等于条件时即可返回\n   *\n   * @param {string} key\n   * @param value\n   * @return {ConversationQuery} self\n   */\n\n  greaterThanOrEqualTo(key, value) {\n    return this._addCondition(key, '$gte', value);\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段满足不等于条件时即可返回\n   *\n   * @param {string} key\n   * @param value\n   * @return {ConversationQuery} self\n   */\n  notEqualTo(key, value) {\n    return this._addCondition(key, '$ne', value);\n  }\n\n  /**\n   * 增加查询条件，当 conversation 存在指定的字段时即可返回\n   *\n   * @since 3.5.0\n   * @param {string} key\n   * @return {ConversationQuery} self\n   */\n  exists(key) {\n    return this._addCondition(key, '$exists', true);\n  }\n\n  /**\n   * 增加查询条件，当 conversation 不存在指定的字段时即可返回\n   *\n   * @since 3.5.0\n   * @param {string} key\n   * @return {ConversationQuery} self\n   */\n  doesNotExist(key) {\n    return this._addCondition(key, '$exists', false);\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段对应的值包含在指定值中时即可返回\n   *\n   * @param {string} key\n   * @param values\n   * @return {ConversationQuery} self\n   */\n  containedIn(key, values) {\n    return this._addCondition(key, '$in', values);\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段对应的值不包含在指定值中时即可返回\n   *\n   * @param {string} key\n   * @param values\n   * @return {ConversationQuery} self\n   */\n  notContainsIn(key, values) {\n    return this._addCondition(key, '$nin', values);\n  }\n  /**\n   * 增加查询条件，当conversation的属性中对应的字段中的元素包含所有的值才可返回\n   *\n   * @param {string} key\n   * @param values\n   * @return {ConversationQuery} self\n   */\n  containsAll(key, values) {\n    return this._addCondition(key, '$all', values);\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段对应的值包含此字符串即可返回\n   *\n   * @param {string} key\n   * @param {string} subString\n   * @return {ConversationQuery} self\n   */\n  contains(key, subString) {\n    return this._addCondition(key, '$regex', ConversationQuery._quote(subString));\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段对应的值以此字符串起始即可返回\n   *\n   * @param {string} key\n   * @param {string} prefix\n   * @return {ConversationQuery} self\n   */\n  startsWith(key, prefix) {\n    return this._addCondition(key, '$regex', `^${ConversationQuery._quote(prefix)}`);\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段对应的值以此字符串结束即可返回\n   *\n   * @param {string} key\n   * @param {string} suffix\n   * @return {ConversationQuery} self\n   */\n  endsWith(key, suffix) {\n    return this._addCondition(key, '$regex', `${ConversationQuery._quote(suffix)}$`);\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段对应的值满足提供的正则表达式即可返回\n   *\n   * @param {string} key\n   * @param {RegExp} regex\n   * @return {ConversationQuery} self\n   */\n  matches(key, regex) {\n    this._addCondition(key, '$regex', regex);\n    // Javascript regex options support mig as inline options but store them\n    // as properties of the object. We support mi & should migrate them to\n    // modifiers\n    let _modifiers = '';\n    if (regex.ignoreCase) { _modifiers += 'i'; }\n    if (regex.multiline) { _modifiers += 'm'; }\n\n    if (_modifiers && _modifiers.length) {\n      this._addCondition(key, '$options', _modifiers);\n    }\n    return this;\n  }\n\n  /**\n   * 添加查询约束条件，查找 key 类型是数组，该数组的长度匹配提供的数值\n   *\n   * @param {string} key\n   * @param {Number} length\n   * @return {ConversationQuery} self\n   */\n  sizeEqualTo(key, length) {\n    return this._addCondition(key, '$size', length);\n  }\n\n  /**\n   * 设置返回集合的大小上限\n   *\n   * @param {Number} limit - 上限\n   * @return {ConversationQuery} self\n   */\n  limit(limit) {\n    this._limit = limit;\n    return this;\n  }\n\n  /**\n   * 设置返回集合的起始位置，一般用于分页\n   *\n   * @param {Number} skip - 起始位置跳过几个对象\n   * @return {ConversationQuery} self\n   */\n  skip(skip) {\n    this._skip = skip;\n    return this;\n  }\n\n  /**\n   * 设置返回集合按照指定key进行增序排列\n   *\n   * @param {string} key\n   * @return {ConversationQuery} self\n   */\n  ascending(key) {\n    this._order = key;\n    return this;\n  }\n\n  /**\n   * 设置返回集合按照指定key进行增序排列，如果已设置其他排序，原排序的优先级较高\n   *\n   * @param {string} key\n   * @return {ConversationQuery} self\n   */\n  addAscending(key) {\n    if (this._order) {\n      this._order += `,${key}`;\n    } else {\n      this._order = key;\n    }\n    return this;\n  }\n\n  /**\n   * 设置返回集合按照指定 key 进行降序排列\n   *\n   * @param {string} key\n   * @return {ConversationQuery} self\n   */\n  descending(key) {\n    this._order = `-${key}`;\n    return this;\n  }\n\n  /**\n   * 设置返回集合按照指定 key 进行降序排列，如果已设置其他排序，原排序的优先级较高\n   *\n   * @param {string} key\n   * @return {ConversationQuery} self\n   */\n  addDescending(key) {\n    if (this._order) {\n      this._order += `,-${key}`;\n    } else {\n      this._order = `-${key}`;\n    }\n    return this;\n  }\n\n  /**\n   * 设置返回的 conversations 刷新最后一条消息\n   * @param  {Boolean} [enabled=true]\n   * @return {ConversationQuery} self\n   */\n  withLastMessagesRefreshed(enabled = true) {\n    this._extraOptions.withLastMessagesRefreshed = enabled;\n    return this;\n  }\n\n  /**\n   * 设置返回的 conversations 为精简模式，即不含成员列表\n   * @param  {Boolean} [enabled=true]\n   * @return {ConversationQuery} self\n   */\n  compact(enabled = true) {\n    this._extraOptions.compact = enabled;\n    return this;\n  }\n\n  /**\n   * 执行查询\n   * @return {Promise.<Conversation[]>}\n   */\n  async find() {\n    return this._client._executeQuery(this);\n  }\n}\n","import EventEmitter from 'eventemitter3';\nimport d from 'debug';\nimport Conversation from './conversation';\nimport ConversationQuery from './conversation-query';\nimport {\n  GenericCommand,\n  SessionCommand,\n  ConvCommand,\n  AckCommand,\n  JsonObjectMessage,\n  ReadCommand,\n  ReadTuple,\n  CommandType,\n  OpType,\n} from '../proto/message';\nimport { ErrorCode, createError } from './error';\nimport { Expirable, Cache, keyRemap, union, difference, trim, internal, throttle } from './utils';\nimport { applyDecorators, applyDispatcher } from './plugin';\nimport runSignatureFactory from './signature-factory-runner';\nimport { MessageStatus } from './messages/message';\nimport { version as VERSION } from '../package.json';\n\nconst debug = d('LC:IMClient');\n\nexport default class IMClient extends EventEmitter {\n  /**\n   * 无法直接实例化，请使用 {@link Realtime#createIMClient} 创建新的 IMClient。\n   *\n   * @extends EventEmitter\n   * @param  {String} [id] 客户端 id\n   * @param  {Object} [options]\n   * @param  {Function} [options.signatureFactory] open session 时的签名方法 // TODO need details\n   * @param  {Function} [options.conversationSignatureFactory] 对话创建、增减成员操作时的签名方法\n   */\n  constructor(id, options = {}, connection, props) {\n    if (!(id === undefined || typeof id === 'string')) {\n      throw new TypeError(`Client id [${id}] is not a String`);\n    }\n    super();\n    Object.assign(this, {\n      /**\n       * @var id {String} 客户端 id\n       * @memberof IMClient#\n       */\n      id,\n      _connection: connection,\n      options,\n    }, props);\n\n    if (!this._messageParser) {\n      throw new Error('IMClient must be initialized with a MessageParser');\n    }\n    this._conversationCache = new Cache(`client:${this.id}`);\n    this._ackMessageBuffer = {};\n    internal(this).lastPatchTime = Date.now();\n    internal(this)._eventemitter = new EventEmitter();\n    [\n      'invited',\n      'kicked',\n      'membersjoined',\n      'membersleft',\n      'message',\n      'unreadmessages',\n      'unreadmessagescountupdate',\n      'close',\n      'conflict',\n      'unhandledmessage',\n      'reconnect',\n      'reconnecterror',\n    ].forEach(event => this.on(\n      event,\n      (...payload) => this._debug(`${event} event emitted. %O`, payload),\n    ));\n    // onIMClientCreate hook\n    applyDecorators(this._plugins.onIMClientCreate, this);\n  }\n\n  _debug(...params) {\n    debug(...params, `[${this.id}]`);\n  }\n\n  /**\n   * @override\n   * @private\n   */\n  async _dispatchCommand(command) {\n    this._debug(trim(command), 'received');\n    switch (command.cmd) {\n      case CommandType.conv:\n        return this._dispatchConvMessage(command);\n      case CommandType.direct:\n        return this._dispatchDirectMessage(command);\n      case CommandType.session:\n        return this._dispatchSessionMessage(command);\n      case CommandType.unread:\n        return this._dispatchUnreadMessage(command);\n      case CommandType.rcp:\n        return this._dispatchRcpMessage(command);\n      case CommandType.patch:\n        return this._dispatchPatchMessage(command);\n      default:\n        return this.emit('unhandledmessage', command);\n    }\n  }\n\n  async _dispatchSessionMessage(message) {\n    const {\n      sessionMessage: {\n        code, reason,\n      },\n    } = message;\n    switch (message.op) {\n      case OpType.closed: {\n        internal(this)._eventemitter.emit('close');\n        if (code === ErrorCode.SESSION_CONFLICT) {\n          /**\n           * 用户在其他客户端登录，当前客户端被服务端强行下线。详见文档「单点登录」章节。\n           * @event IMClient#conflict\n           */\n          return this.emit('conflict', {\n            reason,\n          });\n        }\n        /**\n         * 当前客户端被服务端强行下线\n         * @event IMClient#close\n         * @param {Object} payload\n         * @param {Number} payload.code 错误码\n         * @param {String} payload.reason 原因\n         */\n        return this.emit('close', {\n          code, reason,\n        });\n      }\n      default:\n        this.emit('unhandledmessage', message);\n        throw new Error('Unrecognized session command');\n    }\n  }\n\n  _dispatchUnreadMessage({\n    unreadMessage: {\n      convs,\n      notifTime,\n    },\n  }) {\n    internal(this).lastUnreadNotifTime = notifTime;\n    // ensure all converstions are cached\n    return this.getConversations(convs.map(conv => conv.cid)).then(() =>\n      // update conversations data\n      Promise.all(convs.map(({\n        cid,\n        unread,\n        mid,\n        timestamp: ts,\n        from,\n        data,\n        binaryMsg,\n        patchTimestamp,\n        mentioned,\n      }) => this.getConversation(cid).then((conversation) => {\n        // deleted conversation\n        if (!conversation) return null;\n        let timestamp;\n        if (ts) {\n          timestamp = new Date(ts.toNumber());\n          conversation.lastMessageAt = timestamp; // eslint-disable-line no-param-reassign\n        }\n        return (mid ? this._messageParser.parse(binaryMsg || data).then((message) => {\n          const messageProps = {\n            id: mid,\n            cid,\n            timestamp,\n            from,\n          };\n          if (patchTimestamp) {\n            messageProps.updatedAt = new Date(patchTimestamp.toNumber());\n          }\n          Object.assign(message, messageProps);\n          conversation.lastMessage = message; // eslint-disable-line no-param-reassign\n        }) : Promise.resolve()).then(() => {\n          conversation._setUnreadMessagesMentioned(mentioned);\n          const countNotUpdated = unread === internal(conversation).unreadMessagesCount;\n          if (countNotUpdated) return null; // to be filtered\n          // manipulate internal property directly to skip unreadmessagescountupdate event\n          internal(conversation).unreadMessagesCount = unread;\n          return conversation;\n        });\n      // filter conversations without unread count update\n      }))).then(conversations => conversations.filter(conversation => conversation)))\n      .then((conversations) => {\n        if (conversations.length) {\n          /**\n           * 未读消息数目更新\n           * @event IMClient#unreadmessagescountupdate\n           * @since 3.4.0\n           * @param {Conversation[]} conversations 未读消息数目有更新的对话列表\n           */\n          this.emit('unreadmessagescountupdate', conversations);\n        }\n      });\n  }\n\n  async _dispatchRcpMessage(message) {\n    const {\n      rcpMessage,\n      rcpMessage: {\n        read,\n      },\n    } = message;\n    const conversationId = rcpMessage.cid;\n    const messageId = rcpMessage.id;\n    const timestamp = new Date(rcpMessage.t.toNumber());\n    const conversation = this._conversationCache.get(conversationId);\n    // conversation not cached means the client does not send the message\n    // during this session\n    if (!conversation) return;\n    conversation._handleReceipt({ messageId, timestamp, read });\n  }\n\n  _dispatchPatchMessage({\n    patchMessage: {\n      patches,\n    },\n  }) {\n    // ensure all converstions are cached\n    return this.getConversations(patches.map(patch => patch.cid)).then(() =>\n      Promise.all(patches.map(({\n        cid, mid, timestamp, recall, data, patchTimestamp, from, binaryMsg, mentionAll, mentionPids,\n      }) =>\n        this.getConversation(cid).then((conversation) => {\n          // deleted conversation\n          if (!conversation) return null;\n          return this._messageParser.parse(binaryMsg || data).then((message) => {\n            const patchTime = patchTimestamp.toNumber();\n            const messageProps = {\n              id: mid,\n              cid,\n              timestamp: new Date(timestamp.toNumber()),\n              updatedAt: new Date(patchTime),\n              from,\n              mentionList: mentionPids,\n              mentionedAll: mentionAll,\n            };\n            Object.assign(message, messageProps);\n            message._setStatus(MessageStatus.SENT);\n            message._updateMentioned(this.id);\n            if (internal(this).lastPatchTime < patchTime) {\n              internal(this).lastPatchTime = patchTime;\n            }\n            // update conversation lastMessage\n            if (conversation.lastMessage && conversation.lastMessage.id === mid) {\n              conversation.lastMessage = message; // eslint-disable-line no-param-reassign\n            }\n            if (recall) {\n              /**\n               * 消息被撤回\n               * @event IMClient#messagerecall\n               * @param {AVMessage} message 被撤回的消息\n               * @param {Conversation} conversation 消息所在的会话\n               */\n              this.emit('messagerecall', message, conversation);\n              /**\n               * 消息被撤回\n               * @event Conversation#messagerecall\n               * @param {AVMessage} message 被撤回的消息\n               */\n              conversation.emit('messagerecall', message);\n            } else {\n              /**\n               * 消息被修改\n               * @event IMClient#messageupdate\n               * @param {AVMessage} message 被修改的消息\n               * @param {Conversation} conversation 消息所在的会话\n               */\n              this.emit('messageupdate', message, conversation);\n              /**\n               * 消息被修改\n               * @event Conversation#messageupdate\n               * @param {AVMessage} message 被修改的消息\n               */\n              conversation.emit('messageupdate', message);\n            }\n          });\n        }))));\n  }\n\n  async _dispatchConvMessage(message) {\n    const {\n      convMessage,\n      convMessage: {\n        initBy, m,\n      },\n    } = message;\n    const conversation = await this.getConversation(convMessage.cid);\n    switch (message.op) {\n      case OpType.joined: {\n        if (!conversation.transient) {\n          // eslint-disable-next-line no-param-reassign\n          conversation.members = union(conversation.members, [this.id]);\n        }\n        const payload = {\n          invitedBy: initBy,\n        };\n        /**\n         * 当前用户被添加至某个对话\n         * @event IMClient#invited\n         * @param {Object} payload\n         * @param {String} payload.invitedBy 邀请者 id\n         * @param {Conversation} conversation\n         */\n        this.emit('invited', payload, conversation);\n        /**\n         * 当前用户被添加至当前对话\n         * @event Conversation#invited\n         * @param {Object} payload\n         * @param {String} payload.invitedBy 该移除操作的发起者 id\n         */\n        conversation.emit('invited', payload);\n        return;\n      }\n      case OpType.left: {\n        if (!conversation.transient) {\n          // eslint-disable-next-line no-param-reassign\n          conversation.members = difference(conversation.members, [this.id]);\n        }\n        const payload = {\n          kickedBy: initBy,\n        };\n        /**\n         * 当前用户被从某个对话中移除\n         * @event IMClient#kicked\n         * @param {Object} payload\n         * @param {String} payload.kickedBy 该移除操作的发起者 id\n         * @param {Conversation} conversation\n         */\n        this.emit('kicked', payload, conversation);\n        /**\n         * 当前用户被从当前对话中移除\n         * @event Conversation#kicked\n         * @param {Object} payload\n         * @param {String} payload.kickedBy 该移除操作的发起者 id\n         */\n        conversation.emit('kicked', payload);\n        return;\n      }\n      case OpType.members_joined: {\n        if (!conversation.transient) {\n          // eslint-disable-next-line no-param-reassign\n          conversation.members = union(conversation.members, convMessage.m);\n        }\n        const payload = {\n          invitedBy: initBy,\n          members: m,\n        };\n        /**\n         * 有用户被添加至某个对话\n         * @event IMClient#membersjoined\n         * @param {Object} payload\n         * @param {String[]} payload.members 被添加的用户 id 列表\n         * @param {String} payload.invitedBy 邀请者 id\n         * @param {Conversation} conversation\n         */\n        this.emit('membersjoined', payload, conversation);\n        /**\n         * 有成员被添加至当前对话\n         * @event Conversation#membersjoined\n         * @param {Object} payload\n         * @param {String[]} payload.members 被添加的成员 id 列表\n         * @param {String} payload.invitedBy 邀请者 id\n         */\n        conversation.emit('membersjoined', payload);\n        return;\n      }\n      case OpType.members_left: {\n        if (!conversation.transient) {\n          // eslint-disable-next-line no-param-reassign\n          conversation.members = difference(conversation.members, convMessage.m);\n        }\n        const payload = {\n          kickedBy: initBy,\n          members: m,\n        };\n        /**\n         * 有成员被从某个对话中移除\n         * @event IMClient#membersleft\n         * @param {Object} payload\n         * @param {String[]} payload.members 被移除的成员 id 列表\n         * @param {String} payload.kickedBy 该移除操作的发起者 id\n         * @param {Conversation} conversation\n         */\n        this.emit('membersleft', payload, conversation);\n        /**\n         * 有成员被从当前对话中移除\n         * @event Conversation#membersleft\n         * @param {Object} payload\n         * @param {String[]} payload.members 被移除的成员 id 列表\n         * @param {String} payload.kickedBy 该移除操作的发起者 id\n         */\n        conversation.emit('membersleft', payload);\n        return;\n      }\n      default:\n        this.emit('unhandledmessage', message);\n        throw new Error('Unrecognized conversation command');\n    }\n  }\n\n  _dispatchDirectMessage(originalMessage) {\n    const {\n      directMessage,\n      directMessage: {\n        id, cid, fromPeerId, timestamp, transient, patchTimestamp, mentionPids, mentionAll,\n        binaryMsg, msg,\n      },\n    } = originalMessage;\n    const content = binaryMsg ? binaryMsg.toArrayBuffer() : msg;\n    return Promise.all([\n      this.getConversation(directMessage.cid),\n      this._messageParser.parse(content),\n    ]).then(([conversation, message]) => {\n      // deleted conversation\n      if (!conversation) return undefined;\n      const messageProps = {\n        id,\n        cid,\n        timestamp: new Date(timestamp.toNumber()),\n        from: fromPeerId,\n        mentionList: mentionPids,\n        mentionedAll: mentionAll,\n      };\n      if (patchTimestamp) {\n        messageProps.updatedAt = new Date(patchTimestamp.toNumber());\n      }\n      Object.assign(message, messageProps);\n      message._updateMentioned(this.id);\n      message._setStatus(MessageStatus.SENT);\n      // filter outgoing message sent from another device\n      if (message.from !== this.id) {\n        if (!(transient || conversation.transient)) {\n          this._sendAck(message);\n        }\n      }\n      return this._dispatchParsedMessage(message, conversation);\n    });\n  }\n\n  _dispatchParsedMessage(message, conversation) {\n    // beforeMessageDispatch hook\n    return applyDispatcher(this._plugins.beforeMessageDispatch, [message, conversation])\n      .then((shouldDispatch) => {\n        if (shouldDispatch === false) return;\n        conversation.lastMessage = message; // eslint-disable-line no-param-reassign\n        conversation.lastMessageAt = message.timestamp; // eslint-disable-line no-param-reassign\n        // filter outgoing message sent from another device\n        if (message.from !== this.id) {\n          conversation.unreadMessagesCount += 1; // eslint-disable-line no-param-reassign\n          if (message.mentioned) conversation._setUnreadMessagesMentioned(true);\n        }\n        /**\n         * 当前用户收到消息\n         * @event IMClient#message\n         * @param {Message} message\n         * @param {Conversation} conversation 收到消息的对话\n         */\n        this.emit('message', message, conversation);\n        /**\n         * 当前对话收到消息\n         * @event Conversation#message\n         * @param {Message} message\n         */\n        conversation.emit('message', message);\n      });\n  }\n\n  _sendAck(message) {\n    this._debug('send ack for %O', message);\n    const { cid } = message;\n    if (!cid) {\n      throw new Error('missing cid');\n    }\n    if (!this._ackMessageBuffer[cid]) {\n      this._ackMessageBuffer[cid] = [];\n    }\n    this._ackMessageBuffer[cid].push(message);\n    return this._doSendAck();\n  }\n\n  // jsdoc-ignore-start\n  @throttle(1000)\n  // jsdoc-ignore-end\n  _doSendAck() {\n    // if not connected, just skip everything\n    if (!this._connection.is('connected')) return;\n    this._debug('do send ack %O', this._ackMessageBuffer);\n    Promise.all(Object.keys(this._ackMessageBuffer).map((cid) => {\n      const convAckMessages = this._ackMessageBuffer[cid];\n      const timestamps = convAckMessages.map(message => message.timestamp);\n      const command = new GenericCommand({\n        cmd: 'ack',\n        ackMessage: new AckCommand({\n          cid,\n          fromts: Math.min.apply(null, timestamps),\n          tots: Math.max.apply(null, timestamps),\n        }),\n      });\n      delete this._ackMessageBuffer[cid];\n      return this._send(command, false).catch((error) => {\n        this._debug('send ack failed: %O', error);\n        this._ackMessageBuffer[cid] = convAckMessages;\n      });\n    }));\n  }\n\n  _send(cmd, ...args) {\n    const command = cmd;\n    if (this.id) {\n      command.peerId = this.id;\n    }\n    return this._connection.send(command, ...args);\n  }\n\n  _open(appId, tag, deviceId, isReconnect = false) {\n    this._debug('open session');\n    const {\n      lastUnreadNotifTime,\n      lastPatchTime,\n    } = internal(this);\n    return Promise\n      .resolve(new GenericCommand({\n        cmd: 'session',\n        op: 'open',\n        appId,\n        sessionMessage: new SessionCommand({\n          ua: `js/${VERSION}`,\n          r: isReconnect,\n          lastUnreadNotifTime,\n          lastPatchTime,\n          configBitmap: 1,\n        }),\n      }))\n      .then((command) => {\n        if (isReconnect) {\n          // if sessionToken is not expired, skip signature/tag/deviceId\n          const { sessionToken } = internal(this);\n          if (sessionToken) {\n            const { value } = sessionToken;\n            if (value && value !== Expirable.EXPIRED) {\n              Object.assign(command.sessionMessage, {\n                st: value,\n              });\n              return command;\n            }\n          }\n        }\n        Object.assign(command.sessionMessage, trim({\n          tag,\n          deviceId,\n        }));\n        if (this.options.signatureFactory) {\n          return runSignatureFactory(this.options.signatureFactory, [this._identity])\n            .then((signatureResult) => {\n              Object.assign(command.sessionMessage, keyRemap({\n                signature: 's',\n                timestamp: 't',\n                nonce: 'n',\n              }, signatureResult));\n              return command;\n            });\n        }\n        return command;\n      })\n      .then(this._send.bind(this))\n      .then((resCommand) => {\n        const {\n          peerId,\n          sessionMessage,\n          sessionMessage: {\n            st: token,\n            stTtl: tokenTTL,\n            code,\n          },\n        } = resCommand;\n        if (code) {\n          throw createError(sessionMessage);\n        }\n        if (!peerId) {\n          console.warn('Unexpected session opened without peerId.');\n          return;\n        }\n        this.id = peerId;\n        if (!this._identity) this._identity = peerId;\n        if (token) {\n          internal(this).sessionToken = new Expirable(token, tokenTTL * 1000);\n        }\n      })\n      .catch((error) => {\n        if (error.code === ErrorCode.SESSION_TOKEN_EXPIRED) {\n          if (internal(this).sessionToken === undefined) {\n            // let it fail if sessoinToken not cached but command rejected as token expired\n            // to prevent session openning flood\n            throw new Error('Unexpected session expiration');\n          }\n          debug('Session token expired, reopening');\n          delete internal(this).sessionToken;\n          return this._open(appId, tag, deviceId, isReconnect);\n        }\n        throw error;\n      });\n  }\n\n  /**\n   * 关闭客户端\n   * @return {Promise}\n   */\n  async close() {\n    this._debug('close session');\n    const command = new GenericCommand({\n      cmd: 'session',\n      op: 'close',\n    });\n    await this._send(command);\n    internal(this)._eventemitter.emit('close');\n    this.emit('close', {\n      code: 0,\n    });\n  }\n  /**\n   * 获取 client 列表中在线的 client，每次查询最多 20 个 clientId，超出部分会被忽略\n   * @param  {String[]} clientIds 要查询的 client ids\n   * @return {Primse.<String[]>} 在线的 client ids\n   */\n  async ping(clientIds) {\n    this._debug('ping');\n    if (!(clientIds instanceof Array)) {\n      throw new TypeError(`clientIds ${clientIds} is not an Array`);\n    }\n    if (!clientIds.length) {\n      return Promise.resolve([]);\n    }\n    const command = new GenericCommand({\n      cmd: 'session',\n      op: 'query',\n      sessionMessage: new SessionCommand({\n        sessionPeerIds: clientIds,\n      }),\n    });\n    const resCommand = await this._send(command);\n    return resCommand.sessionMessage.onlineSessionPeerIds;\n  }\n\n  /**\n   * 获取某个特定的对话\n   * @param  {String} id 对话 id，对应 _Conversation 表中的 objectId\n   * @param  {Boolean} [noCache=false] 强制不从缓存中获取\n   * @return {Promise.<Conversation>} 如果 id 对应的对话不存在则返回 null\n   */\n  async getConversation(id, noCache = false) {\n    if (typeof id !== 'string') {\n      throw new TypeError(`${id} is not a String`);\n    }\n    if (!noCache) {\n      const cachedConversation = this._conversationCache.get(id);\n      if (cachedConversation) {\n        return Promise.resolve(cachedConversation);\n      }\n    }\n    return this\n      .getQuery()\n      .equalTo('objectId', id)\n      .find()\n      .then(conversations => conversations[0] || null);\n  }\n\n  /**\n   * 通过 id 批量获取某个特定的对话\n   * @since 3.4.0\n   * @param  {String[]} ids 对话 id 列表，对应 _Conversation 表中的 objectId\n   * @param  {Boolean} [noCache=false] 强制不从缓存中获取\n   * @return {Promise.<Conversation[]>} 如果 id 对应的对话不存在则返回 null\n   */\n  async getConversations(ids, noCache = false) {\n    const remoteConversationIds =\n      noCache ? ids : ids.filter(id => this._conversationCache.get(id) === null);\n    if (remoteConversationIds.length) {\n      await (this.getQuery().containedIn('objectId', remoteConversationIds).limit(999)).find();\n    }\n    return ids.map(id => this._conversationCache.get(id));\n  }\n\n  /**\n   * 构造一个 ConversationQuery 来查询对话\n   * @return {ConversationQuery}\n   */\n  getQuery() {\n    return new ConversationQuery(this);\n  }\n\n  async _executeQuery(query) {\n    const queryJSON = query.toJSON();\n    queryJSON.where = new JsonObjectMessage({\n      data: JSON.stringify(queryJSON.where),\n    });\n    const command = new GenericCommand({\n      cmd: 'conv',\n      op: 'query',\n      convMessage: new ConvCommand(queryJSON),\n    });\n    const resCommand = await this._send(command);\n    let conversations;\n    try {\n      conversations = JSON.parse(resCommand.convMessage.results.data);\n    } catch (error) {\n      const commandString = JSON.stringify(trim(resCommand));\n      throw new Error(`Parse query result failed: ${error.message}. Command: ${commandString}`);\n    }\n    conversations =\n      await Promise.all(conversations.map(this._parseConversationFromRawData.bind(this)));\n    return conversations.map((fetchedConversation) => {\n      let conversation = this._conversationCache.get(fetchedConversation.id);\n      if (!conversation) {\n        conversation = fetchedConversation;\n        this._debug('no match, set cache');\n        this._conversationCache.set(fetchedConversation.id, fetchedConversation);\n      } else {\n        this._debug('update cached conversation');\n        [\n          'creator',\n          'createdAt',\n          'updatedAt',\n          'lastMessageAt',\n          'lastMessage',\n          'mutedMembers',\n          'members',\n          '_attributes',\n          'transient',\n          'muted',\n        ].forEach((key) => {\n          const value = fetchedConversation[key];\n          if (value !== undefined) conversation[key] = value;\n        });\n        conversation._reset();\n      }\n      return conversation;\n    });\n  }\n\n  async _parseConversationFromRawData(rawData) {\n    const data = keyRemap({\n      objectId: 'id',\n      lm: 'lastMessageAt',\n      msg: 'lastMessage',\n      msg_from: 'lastMessageFrom',\n      msg_mid: 'lastMessageId',\n      msg_timestamp: 'lastMessageTimestamp',\n      patch_timestamp: 'lastMessagePatchTimestamp',\n      m: 'members',\n      tr: 'transient',\n      sys: 'system',\n      c: 'creator',\n      mu: 'mutedMembers',\n    }, rawData);\n    if (data.lastMessage) {\n      const message = await this._messageParser.parse(data.lastMessage);\n      data.lastMessage = message;\n      message.from = data.lastMessageFrom;\n      message.id = data.lastMessageId;\n      message.timestamp = new Date(data.lastMessageTimestamp);\n      if (data.lastMessagePatchTimestamp) {\n        message.updatedAt = new Date(data.lastMessagePatchTimestamp);\n      }\n      message._setStatus(MessageStatus.SENT);\n      delete data.lastMessageFrom;\n      delete data.lastMessageId;\n      delete data.lastMessageTimestamp;\n      delete data.lastMessagePatchTimestamp;\n    }\n    return new Conversation(data, this);\n  }\n\n  /**\n   * 创建一个 conversation\n   * @param {Object} options 除了下列字段外的其他字段将被视为对话的自定义属性\n   * @param {String[]} options.members 对话的初始成员列表，默认包含当前 client\n   * @param {String} [options.name] 对话的名字\n   * @param {Boolean} [options.transient=false] 暂态会话\n   * @param {Boolean} [options.unique=false] 唯一对话，当其为 true 时，如果当前已经有相同成员的对话存在则返回该对话，否则会创建新的对话\n   * @return {Promise.<Conversation>}\n   */\n  async createConversation(options = {}) {\n    const {\n      members: m,\n      name,\n      transient,\n      unique,\n      ...properties\n    } = options;\n    if (!(transient || Array.isArray(m))) {\n      throw new TypeError(`conversation members ${m} is not an array`);\n    }\n    let members = new Set(m);\n    members.add(this.id);\n    members = Array.from(members).sort();\n    let attr = properties || {};\n    if (name) {\n      if (typeof name !== 'string') {\n        throw new TypeError(`conversation name ${name} is not a string`);\n      }\n      attr.name = name;\n    }\n    attr = new JsonObjectMessage({\n      data: JSON.stringify(attr),\n    });\n\n    const startCommandJson = {\n      m: members,\n      attr,\n      transient,\n      unique,\n    };\n\n    const command = new GenericCommand({\n      cmd: 'conv',\n      op: 'start',\n      convMessage: new ConvCommand(startCommandJson),\n    });\n\n    if (this.options.conversationSignatureFactory) {\n      const params = [null, this._identity, members, 'create'];\n      const signatureResult = await runSignatureFactory(\n        this.options.conversationSignatureFactory,\n        params,\n      );\n      Object.assign(command.convMessage, keyRemap({\n        signature: 's',\n        timestamp: 't',\n        nonce: 'n',\n      }, signatureResult));\n    }\n\n    const resCommand = await this._send(command);\n    const conversation = new Conversation({\n      name,\n      transient,\n      unique,\n      id: resCommand.convMessage.cid,\n      createdAt: resCommand.convMessage.cdate,\n      updatedAt: resCommand.convMessage.cdate,\n      lastMessageAt: null,\n      creator: this.id,\n      members: transient ? [] : members,\n      ...properties,\n    }, this);\n    this._conversationCache.set(conversation.id, conversation);\n    return conversation;\n  }\n\n  // jsdoc-ignore-start\n  @throttle(1000)\n  // jsdoc-ignore-end\n  _doSendRead() {\n    // if not connected, just skip everything\n    if (!this._connection.is('connected')) return;\n    const buffer = internal(this).readConversationsBuffer;\n    const conversations = Array.from(buffer);\n    if (!conversations.length) return;\n    const ids = conversations.map((conversation) => {\n      if (!(conversation instanceof Conversation)) {\n        throw new TypeError(`${conversation} is not a Conversation`);\n      }\n      return conversation.id;\n    });\n    this._debug(`mark [${ids}] as read`);\n    buffer.clear();\n    this._sendReadCommand(conversations).catch((error) => {\n      this._debug('send read failed: %O', error);\n      conversations.forEach(buffer.add.bind(buffer));\n    });\n  }\n  _sendReadCommand(conversations) {\n    return this._send(new GenericCommand({\n      cmd: 'read',\n      readMessage: new ReadCommand({\n        convs: conversations.map(conversation => new ReadTuple({\n          cid: conversation.id,\n          mid: (conversation.lastMessage && conversation.lastMessage.from !== this.id)\n            ? conversation.lastMessage.id : undefined,\n          timestamp: (conversation.lastMessageAt || new Date()).getTime(),\n        })),\n      }),\n    }), false);\n  }\n}\n","import Message from './message';\n\nexport default class BinaryMessage extends Message {\n  /**\n   * 二进制消息\n   * @extends Message\n   * @param {ArrayBuffer} buffer\n   * @since 4.0.0\n   */\n  constructor(buffer) {\n    if (!(buffer instanceof ArrayBuffer)) {\n      throw new TypeError(`${buffer} is not an ArrayBuffer`);\n    }\n    super(buffer);\n  }\n\n  /**\n   * @type ArrayBuffer\n   */\n  get buffer() {\n    return this.content;\n  }\n  set buffer(buffer) {\n    this.content = buffer;\n  }\n\n  static validate(target) {\n    return target instanceof ArrayBuffer;\n  }\n}\n","import TypedMessage from './typed-message';\nimport { messageType, IE10Compatible } from './helpers';\n\n// jsdoc-ignore-start\n@messageType(-1)\n@IE10Compatible\n// jsdoc-ignore-end\nexport default class TextMessage extends TypedMessage {\n  /**\n   * 文类类型消息\n   * @extends TypedMessage\n   * @param  {String} [text='']\n   * @throws {TypeError} text 不是 String 类型\n   */\n  constructor(text = '') {\n    if (typeof text !== 'string') {\n      throw new TypeError(`${text} is not a string`);\n    }\n    super();\n    this.setText(text);\n  }\n}\n\n/**\n * @name TYPE\n * @memberof TextMessage\n * @type Number\n * @static\n * @const\n */\n","import d from 'debug';\nimport isPlainObject from 'lodash/isPlainObject';\nimport { applyMiddlewares } from './plugin';\n\nconst debug = d('LC:MessageParser');\n\nconst tryParseJson = (target, key, descriptor) => {\n  const fn = descriptor.value;\n  // eslint-disable-next-line no-param-reassign\n  descriptor.value = function wrapper(param) {\n    let content;\n    if (typeof param !== 'string') {\n      content = param;\n    } else {\n      try {\n        content = JSON.parse(param);\n      } catch (error) {\n        content = param;\n      }\n    }\n    return fn.call(this, content);\n  };\n};\n\nconst applyPlugins = (target, key, descriptor) => {\n  const fn = descriptor.value;\n  // eslint-disable-next-line no-param-reassign\n  descriptor.value = function wrapper(json) {\n    return Promise.resolve(json)\n      .then(applyMiddlewares(this._plugins.beforeMessageParse))\n      .then(decoratedJson => fn.call(this, decoratedJson))\n      .then(applyMiddlewares(this._plugins.afterMessageParse));\n  };\n};\n\nexport default class MessageParser {\n  constructor(plugins = {}) {\n    this._plugins = plugins;\n    this._messageClasses = [];\n  }\n\n  register(messageClass) {\n    if (\n      messageClass &&\n      messageClass.parse &&\n      messageClass.prototype &&\n      messageClass.prototype.toJSON\n    ) {\n      this._messageClasses.unshift(messageClass);\n    } else {\n      throw new TypeError('Invalid messageClass');\n    }\n  }\n\n  // jsdoc-ignore-start\n  @tryParseJson\n  @applyPlugins\n  // jsdoc-ignore-end\n  parse(content) {\n    debug('parsing message: %O', content);\n    // eslint-disable-next-line no-restricted-syntax\n    for (const Klass of this._messageClasses) {\n      const contentCopy = isPlainObject(content) ? Object.assign({}, content) : content;\n      let valid;\n      let result;\n      try {\n        valid = Klass.validate(contentCopy);\n      } catch (error) {\n        // eslint-disable-line no-empty\n      }\n      if (valid) {\n        try {\n          result = Klass.parse(contentCopy);\n        } catch (error) {\n          console.warn('parsing a valid message content error', {\n            error,\n            Klass,\n            content: contentCopy,\n          });\n        }\n        if (result !== undefined) {\n          debug('parse result: %O', result);\n          return result;\n        }\n      }\n    }\n    throw new Error('No Message Class matched');\n  }\n}\n","/** @module leancloud-realtime */\nimport d from 'debug';\nimport uuid from 'uuid/v4';\nimport IMClient from './im-client';\nimport Conversation, { MessageQueryDirection } from './conversation';\nimport Message, { MessageStatus } from './messages/message';\nimport BinaryMessage from './messages/binary-message';\nimport TextMessage from './messages/text-message';\nimport TypedMessage from './messages/typed-message';\nimport RecalledMessage from './messages/recalled-message';\nimport MessageParser from './message-parser';\nimport { trim, internal, ensureArray } from './utils';\n\nconst debug = d('LC:IMPlugin');\n\n/**\n * 消息优先级枚举\n * @enum {Number}\n * @since 3.3.0\n */\nconst MessagePriority = {\n  /** 高 */\n  HIGH: 1,\n  /** 普通 */\n  NORMAL: 2,\n  /** 低 */\n  LOW: 3,\n};\nObject.freeze(MessagePriority);\n\n/**\n * 为 Conversation 定义一个新属性\n * @param {String} prop 属性名\n * @param {Object} [descriptor] 属性的描述符，参见 {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyDescriptor#Description getOwnPropertyDescriptor#Description - MDN}，默认为该属性名对应的 Conversation 自定义属性的 getter/setter\n * @returns void\n * @example\n *\n * conversation.get('type');\n * conversation.set('type', 1);\n *\n * // equals to\n * defineConversationProperty('type');\n * conversation.type;\n * conversation.type = 1;\n */\nconst defineConversationProperty = (prop, descriptor = {\n  get() { return this.get(prop); },\n  set(value) { this.set(prop, value); },\n}) => {\n  Object.defineProperty(Conversation.prototype, prop, descriptor);\n};\n\nexport {\n  /**\n   * @see Message\n   */\n  Message,\n  /**\n   * @see BinaryMessage\n   */\n  BinaryMessage,\n  /**\n   * @see TypedMessage\n   */\n  TypedMessage,\n  /**\n   * @see TextMessage\n   */\n  TextMessage,\n  /**\n   * @see RecalledMessage\n   */\n  RecalledMessage,\n  MessagePriority,\n  MessageStatus,\n  MessageQueryDirection,\n  defineConversationProperty,\n};\n\nexport {\n  /**\n   * decorator，定义消息类的类型常量\n   * @function\n   * @param {Number} type 自定义类型请使用正整数\n   * @example @messageType(1)\n   * class CustomMessage extends TypedMessage {}\n   *\n   * // 不支持 decorator 的情况下可以这样使用\n   * class CustomMessage extends TypedMessage {\n   *   //...\n   * }\n   * messageType(1)(CustomMessage);\n   */\n  messageType,\n  /**\n   * decorator，定义消息类的自定义字段\n   * @function\n   * @param {String[]} fields 自定义字段\n   * @example @messageField(['foo'])\n   * class CustomMessage extends TypedMessage {\n   *   constructor(foo) {\n   *     super();\n   *     this.foo = foo;\n   *   }\n   * }\n   *\n   * // 不支持 decorator 的情况下可以这样使用\n   * class CustomMessage extends TypedMessage {\n   *   constructor(foo) {\n   *     super();\n   *     this.foo = foo;\n   *   }\n   *   //...\n   * }\n   * messageField(['foo'])(CustomMessage);\n   */\n  messageField,\n  IE10Compatible,\n} from './messages/helpers';\n\nconst onRealtimeCreate = (realtime) => {\n  /* eslint-disable no-param-reassign */\n  const deviceId = uuid();\n  realtime._IMClients = {};\n  const messageParser = new MessageParser(realtime._plugins);\n  realtime._messageParser = messageParser;\n\n  const signAVUser = async user => realtime._request({\n    method: 'POST',\n    path: '/rtm/sign',\n    data: {\n      session_token: user.getSessionToken(),\n    },\n  });\n\n  /**\n   * 注册消息类\n   *\n   * 在接收消息、查询消息时，会按照消息类注册顺序的逆序依次尝试解析消息内容\n   *\n   * @memberof Realtime\n   * @instance\n   * @param  {Function | Function[]} messageClass 消息类，需要实现 {@link AVMessage} 接口，\n   * 建议继承自 {@link TypedMessage}\n   * @throws {TypeError} 如果 messageClass 没有实现 {@link AVMessage} 接口则抛出异常\n   */\n  const register = messageClass =>\n    ensureArray(messageClass).map(messageParser.register.bind(messageParser));\n  register(ensureArray(realtime._plugins.messageClasses));\n  /**\n   * 创建一个即时通讯客户端，多次创建相同 id 的客户端会返回同一个实例\n   * @memberof Realtime\n   * @instance\n   * @param  {String|AV.User} [identity] 客户端 identity，如果不指定该参数，服务端会随机生成一个字符串作为 identity，\n   * 如果传入一个已登录的 AV.User，则会使用该用户的 id 作为客户端 identity 登录。\n   * @param  {Object} [clientOptions] 详细参数 @see {@link IMClient}\n   * @param  {String} [tag] 客户端类型标记，以支持单点登录功能\n   * @return {Promise.<IMClient>}\n   */\n  const createIMClient = async (identity, clientOptions, tag) => {\n    let id;\n    const buildinOptions = {};\n    if (identity) {\n      if (typeof identity === 'string') {\n        id = identity;\n      } else if (identity.id && identity.getSessionToken) {\n        ({ id } = identity);\n        const sessionToken = identity.getSessionToken();\n        if (!sessionToken) {\n          throw new Error('User must be authenticated');\n        }\n        buildinOptions.signatureFactory = signAVUser;\n      } else {\n        throw new TypeError('Identity must be a String or an AV.User');\n      }\n      if (realtime._IMClients[id] !== undefined) {\n        return realtime._IMClients[id];\n      }\n    }\n    const promise = realtime._open().then((connection) => {\n      const client = new IMClient(id, { ...buildinOptions, ...clientOptions }, connection, {\n        _messageParser: messageParser,\n        _plugins: realtime._plugins,\n        _identity: identity,\n      });\n      connection.on('reconnect', () =>\n        client._open(realtime._options.appId, tag, deviceId, true)\n          /**\n           * 客户端连接恢复正常，该事件通常在 {@link Realtime#event:reconnect} 之后发生\n           * @event IMClient#reconnect\n           * @see Realtime#event:reconnect\n           * @since 3.2.0\n           */\n          /**\n           * 客户端重新登录发生错误（网络连接已恢复，但重新登录错误）\n           * @event IMClient#reconnecterror\n           * @since 3.2.0\n           */\n          .then(\n            () => client.emit('reconnect'),\n            error => client.emit('reconnecterror', error),\n          ));\n      internal(client)._eventemitter.on('close', () => {\n        delete realtime._IMClients[client.id];\n        realtime._deregister(client);\n      }, realtime);\n      return client._open(realtime._options.appId, tag, deviceId)\n        .then(() => {\n          realtime._IMClients[client.id] = client;\n          realtime._register(client);\n          return client;\n        }).catch((error) => {\n          delete realtime._IMClients[client.id];\n          throw error;\n        });\n    });\n    if (identity) {\n      realtime._IMClients[id] = promise;\n    }\n    return promise;\n  };\n  Object.assign(realtime, {\n    register,\n    createIMClient,\n  });\n  /* eslint-enable no-param-reassign */\n};\n\nconst beforeCommandDispatch = (command, realtime) => {\n  if (command.peerId === null) return true;\n  const targetClient = realtime._IMClients[command.peerId];\n  if (targetClient) {\n    Promise.resolve(targetClient).then(client => client._dispatchCommand(command)).catch(debug);\n  } else {\n    debug(\n      '[WARN] Unexpected message received without any live client match: %O',\n      trim(command),\n    );\n  }\n  return false;\n};\n\nexport const IMPlugin = {\n  name: 'leancloud-realtime-plugin-im',\n  onRealtimeCreate,\n  beforeCommandDispatch,\n  messageClasses: [\n    Message,\n    BinaryMessage,\n    RecalledMessage,\n    TextMessage,\n  ],\n};\n","import { Realtime } from './core';\nimport { IMPlugin, defineConversationProperty } from './plugin-im';\n\nRealtime.defineConversationProperty = defineConversationProperty;\nRealtime.__preRegisteredPlugins = [IMPlugin];\n\nexport * from './core';\n\nexport * from './plugin-im';\n"],"names":["module","require","newBuilder","build","messages","push_server","messages2","JsonObjectMessage","UnreadTuple","LogItem","DataCommand","SessionCommand","ErrorCommand","DirectCommand","AckCommand","UnreadCommand","ConvCommand","RoomCommand","LogsCommand","RcpCommand","ReadTuple","MaxReadTuple","ReadCommand","PresenceCommand","ReportCommand","GenericCommand","PatchCommand","PatchItem","CommandType","OpType","StatusType","global","window","EXPIRED","debug","d","Expirable","value","ttl","_value","expiredAt","Date","now","expired","Cache","name","_map","get","key","cache","set","tryAll","promiseConstructors","promise","length","catch","slice","tap","interceptor","decodeDate","date","__type","iso","toNumber","keyRemap","keymap","obj","reduce","newObj","newKey","isIE10","navigator","userAgent","indexOf","getStaticProperty","klass","property","__proto__","undefined","union","a","b","difference","filter","bSet","has","x","map","internal","object","removeNull","isPlainObject","prop","hasOwnProperty","call","trim","JSON","parse","message","ensureArray","target","Array","isArray","setValue","segs","split","lastSeg","pop","currentTarget","forEach","seg","isWeapp","wx","connectSocket","throttle","descriptor","callback","Error","throttleMeta","propertyMeta","previouseTimestamp","timeout","remainingTime","wait","apply","setTimeout","HEARTBEAT_TIME","TIMEOUT_TIME","DEFAULT_RETRY_STRATEGY","Math","min","attempt","requireConnected","requireConnectedWrapper","is","currentState","current","warn","args","WebSocketPlus","getUrls","protocol","WebSocket","_getUrls","resolve","_protocol","init","_createWs","then","__postponeTimeoutTimer","_postponeTimeoutTimer","bind","addEventListener","__pause","pause","__resume","resume","open","throw","wsUrls","urls","reject","url","ws","binaryType","onopen","onclose","error","onerror","_ws","_handleClose","onmessage","_handleMessage","_destroyWs","close","onbeforeevent","event","from","to","payload","emit","onconnected","_startConnectionKeeper","onleaveconnected","_stopConnectionKeeper","onpause","onbeforeresume","onreconnect","ondisconnected","delay","__scheduledRetry","retry","onretry","can","reconnect","fail","removeEventListener","_ping","ping","_clearTimeoutTimers","_timeoutTimer","disconnect","_heartbeatTimer","setInterval","addListener","removeListener","code","reason","isFinished","handleClose","send","data","handleMessage","EventEmitter","StateMachine","create","prototype","ErrorCode","result","Number","createError","errorMessage","appCode","detail","err","COMMAND_TIMEOUT","Connection","getUrl","format","version","protocolString","encodeURIComponent","_protocalFormat","_commands","_serialId","command","waitingForRespond","serialId","i","toBase64","toArrayBuffer","TypeError","msg","decode","e","cmd","echo","checkType","param","constructor","middleware","console","_pluginName","applyDecorators","decorators","decorator","applyMiddlewares","middlewares","previousPromise","applyDispatcher","dispatchers","resultPromise","dispatcher","shouldDispatch","routerCache","Realtime","options","appId","appKey","_options","process","env","SERVER","_cache","clients","_plugins","__preRegisteredPlugins","plugins","plugin","hook","concat","onRealtimeCreate","_request","method","path","query","headers","region","_fetchAppRouter","api","axios","response","_open","_openPromise","noBinary","pushOfflineMessages","connection","_getEndpoints","on","_dispatchCommand","client","isFatal","APP_NOT_AVAILABLE","INVALID_LOGIN","INVALID_ORIGIN","some","errorCode","_fetchEndpointsInfo","info","server","secondary","cachedRouter","res","rtmRouter","rtm_router_server","api_server","router","id","toLowerCase","ssl","_close","cannot","_register","add","_deregister","delete","size","beforeCommandDispatch","_validateSignature","signatureResult","signature","timestamp","nonce","signatureFactory","params","MessageStatus","rMessageStatus","NONE","SENDING","SENT","DELIVERED","READ","FAILED","Message","content","uuid","_setStatus","toJSON","status","_status","_updateMentioned","_mentioned","mentionedAll","mentionList","getMentionList","setMentionList","mentionAll","Boolean","validate","json","_updatedAt","messageType","type","TYPE","_lctype","_getType","messageField","fields","originalCustomFields","_customFields","IE10Compatible","TypedMessage","_","setText","text","_lctext","getText","setAttributes","attributes","_lcattrs","getAttributes","_getCustomFields","field","customFields","RecalledMessage","serializeMessage","binaryMsg","ArrayBuffer","QueryDirection","NEW","OLD","MessageQueryDirection","Conversation","creator","createdAt","updatedAt","lastMessageAt","lastMessage","mutedMembers","members","transient","system","muted","mentioned","_attributes","_reset","IMClient","_client","_debug","onConversationCreate","_setUnreadMessagesMentioned","unreadMessagesMentioned","_setLastDeliveredAt","lastDeliveredAt","_setLastReadAt","lastReadAt","currentAttributes","pendingAttributes","pendingKeys","re","RegExp","childKeys","test","k","parentKey","cloneDeep","_send","convMessage","cid","save","isEmpty","attr","resCommand","udate","fetch","getQuery","equalTo","find","mute","unmute","count","clientIds","conversationSignatureFactory","sort","runSignatureFactory","remove","join","quit","sendOptions","getSendOptions","receipt","priority","pushData","will","ackMessage","uid","t","messagesWaitingForReceipt","_update","newMessage","recall","patch","modify","_lastPatchTime","update","queryMessages","beforeTime","beforeMessageId","afterTime","afterMessageId","limit","direction","startTime","startMessageId","startClosed","endTime","endMessageId","endClosed","log","conditions","getTime","tt","OLD_TO_NEW","all","logsMessage","logs","msgId","patchTimestamp","ackAt","readAt","mentionPids","bin","decodeBase64","_messageParser","messageProps","createMessagesIterator","prevMessages","read","unreadMessagesCount","readConversationsBuffer","_doSendRead","_handleReceipt","messageId","deliveredAt","fetchReceiptTimestamps","maxReadTimestamp","maxAckTimestamp","_fetchAllReceiptTimestamps","maxReadTuples","maxReadTuple","pid","_createdAt","time","_lastMessageAt","ConversationQuery","_encode","source","_quote","s","replace","_calculateFlag","prev","_where","_extraOptions","_addCondition","condition","_skip","skip","_limit","_order","containsMembers","peerIds","containsAll","withMembers","includeSelf","peerIdsSet","sizeEqualTo","lessThan","lessThanOrEqualTo","greaterThan","greaterThanOrEqualTo","notEqualTo","exists","doesNotExist","containedIn","values","notContainsIn","contains","subString","startsWith","prefix","endsWith","suffix","matches","regex","_modifiers","ignoreCase","multiline","ascending","addAscending","descending","addDescending","withLastMessagesRefreshed","enabled","compact","_executeQuery","props","_conversationCache","_ackMessageBuffer","lastPatchTime","_eventemitter","onIMClientCreate","conv","direct","session","unread","rcp","_dispatchConvMessage","_dispatchDirectMessage","_dispatchSessionMessage","_dispatchUnreadMessage","_dispatchRcpMessage","_dispatchPatchMessage","sessionMessage","op","closed","SESSION_CONFLICT","unreadMessage","convs","notifTime","lastUnreadNotifTime","getConversations","mid","ts","getConversation","conversation","countNotUpdated","conversations","rcpMessage","conversationId","patches","patchMessage","patchTime","initBy","m","joined","left","members_joined","members_left","originalMessage","directMessage","fromPeerId","_sendAck","_dispatchParsedMessage","beforeMessageDispatch","push","_doSendAck","_connection","convAckMessages","timestamps","max","peerId","tag","deviceId","isReconnect","VERSION","sessionToken","_identity","token","st","tokenTTL","stTtl","SESSION_TOKEN_EXPIRED","onlineSessionPeerIds","noCache","cachedConversation","ids","remoteConversationIds","where","queryJSON","results","commandString","_parseConversationFromRawData","fetchedConversation","rawData","lastMessageFrom","lastMessageId","lastMessageTimestamp","lastMessagePatchTimestamp","createConversation","unique","properties","startCommandJson","cdate","buffer","clear","_sendReadCommand","BinaryMessage","TextMessage","tryParseJson","fn","wrapper","applyPlugins","beforeMessageParse","decoratedJson","afterMessageParse","MessageParser","_messageClasses","register","messageClass","unshift","Klass","contentCopy","valid","MessagePriority","defineConversationProperty","realtime","_IMClients","messageParser","signAVUser","user","getSessionToken","messageClasses","createIMClient","identity","clientOptions","buildinOptions","targetClient","IMPlugin"],"mappings":"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"}